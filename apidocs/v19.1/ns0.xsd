<?xml version="1.0" encoding="UTF-8"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="activity" type="apiActivity"/>
  <xs:element name="activityList" type="apiActivityList"/>
  <xs:element name="audit" type="apiAudit"/>
  <xs:element name="auditList" type="apiAuditList"/>
  <xs:element name="batchRequest" type="apiBatchRequest"/>
  <xs:element name="batchRequestElement" type="apiBatchRequestElement"/>
  <xs:element name="batchResponse" type="apiBatchResponse"/>
  <xs:element name="batchResponseElement" type="apiBatchResponseElement"/>
  <xs:element name="bulkCommandList" type="apiBulkCommandList"/>
  <xs:element name="cdhUpgradeArgs" type="apiCdhUpgradeArgs"/>
  <xs:element name="cluster" type="apiCluster"/>
  <xs:element name="clusterList" type="apiClusterList"/>
  <xs:element name="clusterRef" type="apiClusterRef"/>
  <xs:element name="clusterTemplate" type="apiClusterTemplate"/>
  <xs:element name="clusterTemplateInstantiator" type="apiClusterTemplateInstantiator"/>
  <xs:element name="clusterUtilization" type="apiClusterUtilization"/>
  <xs:element name="cmPeer" type="apiCmPeer"/>
  <xs:element name="cmPeerList" type="apiCmPeerList"/>
  <xs:element name="collectDiagnosticDataArgs" type="apiCollectDiagnosticDataArguments"/>
  <xs:element name="command" type="apiCommand"/>
  <xs:element name="commandList" type="apiCommandList"/>
  <xs:element name="commandMetadata" type="apiCommandMetadata"/>
  <xs:element name="commandMetadataList" type="apiCommandMetadataList"/>
  <xs:element name="config" type="apiConfig"/>
  <xs:element name="configList" type="apiConfigList"/>
  <xs:element name="configureForKerberosArgs" type="apiConfigureForKerberosArguments"/>
  <xs:element name="apiDashboard" type="apiDashboard"/>
  <xs:element name="apiDashboardList" type="apiDashboardList"/>
  <xs:element name="deployment" type="apiDeployment"/>
  <xs:element name="disableJtHaArgs" type="apiDisableJtHaArguments"/>
  <xs:element name="disableLlamaHaArgs" type="apiDisableLlamaHaArguments"/>
  <xs:element name="hdfsDisableNnHaArgs" type="apiDisableNnHaArguments"/>
  <xs:element name="disableOozieHaArgs" type="apiDisableOozieHaArguments"/>
  <xs:element name="disableRmHaArgs" type="apiDisableRmHaArguments"/>
  <xs:element name="disableSentryHaArgs" type="apiDisableSentryHaArgs"/>
  <xs:element name="echoMessage" type="apiEcho"/>
  <xs:element name="enableJtHaArgs" type="apiEnableJtHaArguments"/>
  <xs:element name="enableLlamaHaArgs" type="apiEnableLlamaHaArguments"/>
  <xs:element name="enableLlamaRmArgs" type="apiEnableLlamaRmArguments"/>
  <xs:element name="enableNnHaArgs" type="apiEnableNnHaArguments"/>
  <xs:element name="enableOozieHaArgs" type="apiEnableOozieHaArguments"/>
  <xs:element name="enableRmHaArgs" type="apiEnableRmHaArguments"/>
  <xs:element name="enableSentryHaArgs" type="apiEnableSentryHaArgs"/>
  <xs:element name="event" type="apiEvent"/>
  <xs:element name="eventQueryResult" type="apiEventQueryResult"/>
  <xs:element name="externalAccount" type="apiExternalAccount"/>
  <xs:element name="externalAccountCategories" type="apiExternalAccountCategoryList"/>
  <xs:element name="externalAccounts" type="apiExternalAccountList"/>
  <xs:element name="externalAccountType" type="apiExternalAccountType"/>
  <xs:element name="externalAccountTypes" type="apiExternalAccountTypeList"/>
  <xs:element name="hbaseSnapshot" type="apiHBaseSnapshot"/>
  <xs:element name="hbaseSnapshotError" type="apiHBaseSnapshotError"/>
  <xs:element name="hbaseSnapshotPolicyArguments" type="apiHBaseSnapshotPolicyArguments"/>
  <xs:element name="hbaseSnapshotResult" type="apiHBaseSnapshotResult"/>
  <xs:element name="hdfsCloudReplicationArguments" type="apiHdfsCloudReplicationArguments"/>
  <xs:element name="hdfsDisableHaArgs" type="apiHdfsDisableHaArguments"/>
  <xs:element name="hdfsFailoverArgs" type="apiHdfsFailoverArguments"/>
  <xs:element name="hdfsHaArgs" type="apiHdfsHaArguments"/>
  <xs:element name="hdfsReplicationArguments" type="apiHdfsReplicationArguments"/>
  <xs:element name="hdfsReplicationCounter" type="apiHdfsReplicationCounter"/>
  <xs:element name="hdfsReplicationResult" type="apiHdfsReplicationResult"/>
  <xs:element name="hdfsSnapshot" type="apiHdfsSnapshot"/>
  <xs:element name="hdfsSnapshotError" type="apiHdfsSnapshotError"/>
  <xs:element name="hdfsSnapshotPolicyArguments" type="apiHdfsSnapshotPolicyArguments"/>
  <xs:element name="hdfsSnapshotResult" type="apiHdfsSnapshotResult"/>
  <xs:element name="hdfsUsageReport" type="apiHdfsUsageReport"/>
  <xs:element name="hdfsUsageReportRow" type="apiHdfsUsageReportRow"/>
  <xs:element name="healthCheck" type="apiHealthCheck"/>
  <xs:element name="hiveCloudReplicationArguments" type="apiHiveCloudReplicationArguments"/>
  <xs:element name="hiveReplicationArguments" type="apiHiveReplicationArguments"/>
  <xs:element name="hiveReplicationError" type="apiHiveReplicationError"/>
  <xs:element name="hiveReplicationResult" type="apiHiveReplicationResult"/>
  <xs:element name="hiveTable" type="apiHiveTable"/>
  <xs:element name="hiveUDF" type="apiHiveUDF"/>
  <xs:element name="host" type="apiHost"/>
  <xs:element name="hostInstallArgs" type="apiHostInstallArguments"/>
  <xs:element name="hostList" type="apiHostList"/>
  <xs:element name="hostNames" type="apiHostNameList"/>
  <xs:element name="hostRef" type="apiHostRef"/>
  <xs:element name="hostRefList" type="apiHostRefList"/>
  <xs:element name="hostTemplate" type="apiHostTemplate"/>
  <xs:element name="hostTemplateList" type="apiHostTemplateList"/>
  <xs:element name="impalaCancelResponse" type="apiImpalaCancelResponse"/>
  <xs:element name="impalaQuery" type="apiImpalaQuery"/>
  <xs:element name="impalaQueryAttribute" type="apiImpalaQueryAttribute"/>
  <xs:element name="impalaQueryAttributeList" type="apiImpalaQueryAttributeList"/>
  <xs:element name="impalaQueryDetailsResponse" type="apiImpalaQueryDetailsResponse"/>
  <xs:element name="impalaQueryResponse" type="apiImpalaQueryResponse"/>
  <xs:element name="impalaTenantUtilization" type="apiImpalaTenantUtilization"/>
  <xs:element name="impalaTenantUtilizationList" type="apiImpalaTenantUtilizationList"/>
  <xs:element name="impalaUDF" type="apiImpalaUDF"/>
  <xs:element name="impalaUtilization" type="apiImpalaUtilization"/>
  <xs:element name="impalaUtilizationHistogram" type="apiImpalaUtilizationHistogram"/>
  <xs:element name="impalaUtilizationHistogramBin" type="apiImpalaUtilizationHistogramBin"/>
  <xs:element name="jnArgs" type="apiJournalNodeArguments"/>
  <xs:element name="kerberosInfo" type="apiKerberosInfo"/>
  <xs:element name="license" type="apiLicense"/>
  <xs:element name="licensedFeatureUsage" type="apiLicensedFeatureUsage"/>
  <xs:element name="metric" type="apiMetric"/>
  <xs:element name="metricData" type="apiMetricData"/>
  <xs:element name="metricList" type="apiMetricList"/>
  <xs:element name="metricSchema" type="apiMetricSchema"/>
  <xs:element name="metricSchemaList" type="apiMetricSchemaList"/>
  <xs:element name="migrateRolesArgs" type="apiMigrateRolesArguments"/>
  <xs:element name="mr2AppInformation" type="apiMr2AppInformation"/>
  <xs:element name="mrUsageReport" type="apiMrUsageReport"/>
  <xs:element name="mrUsageReportRow" type="apiMrUsageReportRow"/>
  <xs:element name="nameservice" type="apiNameservice"/>
  <xs:element name="nameserviceList" type="apiNameserviceList"/>
  <xs:element name="parcel" type="apiParcel"/>
  <xs:element name="parcelList" type="apiParcelList"/>
  <xs:element name="parcelRef" type="apiParcelRef"/>
  <xs:element name="parcelUsage" type="apiParcelUsage"/>
  <xs:element name="parcelUsageHost" type="apiParcelUsageHost"/>
  <xs:element name="parcelUsageParcel" type="apiParcelUsageParcel"/>
  <xs:element name="parcelUsageRack" type="apiParcelUsageRack"/>
  <xs:element name="parcelUsageRole" type="apiParcelUsageRole"/>
  <xs:element name="principals" type="apiPrincipalList"/>
  <xs:element name="process" type="apiProcess"/>
  <xs:element name="productVersion" type="apiProductVersion"/>
  <xs:element name="replicationCommand" type="apiReplicationCommand"/>
  <xs:element name="replicationCommandList" type="apiReplicationCommandList"/>
  <xs:element name="replicationDiagnosticsCollectionArgs" type="apiReplicationDiagnosticsCollectionArgs"/>
  <xs:element name="replicationSchedule" type="apiReplicationSchedule"/>
  <xs:element name="replicationScheduleList" type="apiReplicationScheduleList"/>
  <xs:element name="restartClusterArgs" type="apiRestartClusterArgs"/>
  <xs:element name="role" type="apiRole"/>
  <xs:element name="roleConfigGroup" type="apiRoleConfigGroup"/>
  <xs:element name="roleConfigGroupList" type="apiRoleConfigGroupList"/>
  <xs:element name="roleConfigGroupRef" type="apiRoleConfigGroupRef"/>
  <xs:element name="roleList" type="apiRoleList"/>
  <xs:element name="roleNames" type="apiRoleNameList"/>
  <xs:element name="roleRef" type="apiRoleRef"/>
  <xs:element name="roleTypeConfig" type="apiRoleTypeConfig"/>
  <xs:element name="roleTypeList" type="apiRoleTypeList"/>
  <xs:element name="rollEditsArgs" type="apiRollEditsArgs"/>
  <xs:element name="rollingRestartArgs" type="apiRollingRestartArgs"/>
  <xs:element name="rollingRestartClusterArgs" type="apiRollingRestartClusterArgs"/>
  <xs:element name="rollingUpgradeClusterArgs" type="apiRollingUpgradeClusterArgs"/>
  <xs:element name="rollingUpgradeServicesArgs" type="apiRollingUpgradeServicesArgs"/>
  <xs:element name="scmDbInfo" type="apiScmDbInfo"/>
  <xs:element name="service" type="apiService"/>
  <xs:element name="serviceConfig" type="apiServiceConfig"/>
  <xs:element name="serviceList" type="apiServiceList"/>
  <xs:element name="serviceRef" type="apiServiceRef"/>
  <xs:element name="serviceTypeList" type="apiServiceTypeList"/>
  <xs:element name="shutdownReadiness" type="apiShutdownReadiness"/>
  <xs:element name="simpleRollingRestartClusterArgs" type="apiSimpleRollingRestartClusterArgs"/>
  <xs:element name="snapshotCommand" type="apiSnapshotCommand"/>
  <xs:element name="snapshotCommandList" type="apiSnapshotCommandList"/>
  <xs:element name="snapshotPolicy" type="apiSnapshotPolicy"/>
  <xs:element name="snapshotPolicyList" type="apiSnapshotPolicyList"/>
  <xs:element name="tenantUtilization" type="apiTenantUtilization"/>
  <xs:element name="tenantUtilizationList" type="apiTenantUtilizationList"/>
  <xs:element name="timeSeries" type="apiTimeSeries"/>
  <xs:element name="timeSeriesAggregateStatistics" type="apiTimeSeriesAggregateStatistics"/>
  <xs:element name="timeSeriesCrossEntityMetadata" type="apiTimeSeriesCrossEntityMetadata"/>
  <xs:element name="timeSeriesData" type="apiTimeSeriesData"/>
  <xs:element name="timeSeriesEntityAttribute" type="apiTimeSeriesEntityAttribute"/>
  <xs:element name="timeSeriesEntityAttributeList" type="apiTimeSeriesEntityAttributeList"/>
  <xs:element name="timeSeriesEntityType" type="apiTimeSeriesEntityType"/>
  <xs:element name="timeSeriesEntityTypeList" type="apiTimeSeriesEntityTypeList"/>
  <xs:element name="timeSeriesMetaData" type="apiTimeSeriesMetadata"/>
  <xs:element name="timeSeriesQuery" type="apiTimeSeriesRequest"/>
  <xs:element name="timeSeriesResponse" type="apiTimeSeriesResponse"/>
  <xs:element name="timeSeriesResponseList" type="apiTimeSeriesResponseList"/>
  <xs:element name="user" type="apiUser"/>
  <xs:element name="userList" type="apiUserList"/>
  <xs:element name="userSession" type="apiUserSession"/>
  <xs:element name="userSessionList" type="apiUserSessionList"/>
  <xs:element name="cmVersionInfo" type="apiVersionInfo"/>
  <xs:element name="watchedDir" type="apiWatchedDir"/>
  <xs:element name="watchedDirList" type="apiWatchedDirList"/>
  <xs:element name="yarnApplication" type="apiYarnApplication"/>
  <xs:element name="yarnApplicationAttribute" type="apiYarnApplicationAttribute"/>
  <xs:element name="yarnApplicationAttributeList" type="apiYarnApplicationAttributeList"/>
  <xs:element name="yarnApplicationDiagnosticsCollectionArgs" type="apiYarnApplicationDiagnosticsCollectionArgs"/>
  <xs:element name="yarnApplicationResponse" type="apiYarnApplicationResponse"/>
  <xs:element name="yarnKillResponse" type="apiYarnKillResponse"/>
  <xs:element name="yarnTenantUtilization" type="apiYarnTenantUtilization"/>
  <xs:element name="yarnTenantUtilizationList" type="apiYarnTenantUtilizationList"/>
  <xs:element name="yarnUtilization" type="apiYarnUtilization"/>
  <xs:complexType name="apiActivity">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Represents a user activity, such as a MapReduce job, a Hive query, an Oozie
workflow, etc.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Activity name.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="type" type="apiActivityType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Activity type. Whether it's an MR job, a Pig job, a Hive query, etc.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="parent" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The name of the parent activity.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="startTime" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The start time of this activity.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="finishTime" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The finish time of this activity.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="id" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Activity id, which is unique within a MapReduce service.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="status" type="apiActivityStatus" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Activity status.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="user" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The user who submitted this activity.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="group" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The user-group of this activity.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="inputDir" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The input data directory of the activity. An HDFS url.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="outputDir" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The output result directory of the activity. An HDFS url.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="mapper" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The mapper class.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="combiner" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The combiner class.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="reducer" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The reducer class.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="queueName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The scheduler queue this activity is in.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="schedulerPriority" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The scheduler priority of this activity.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiActivityList">
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="activities" type="apiActivity" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="apiActivityStatus">
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNKNOWN"/>
      <xs:enumeration value="SUBMITTED"/>
      <xs:enumeration value="STARTED"/>
      <xs:enumeration value="SUSPENDED"/>
      <xs:enumeration value="FAILED"/>
      <xs:enumeration value="KILLED"/>
      <xs:enumeration value="SUCCEEDED"/>
      <xs:enumeration value="ASSUMED_SUCCEEDED"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="apiActivityType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNKNOWN"/>
      <xs:enumeration value="OOZIE"/>
      <xs:enumeration value="PIG"/>
      <xs:enumeration value="HIVE"/>
      <xs:enumeration value="MR"/>
      <xs:enumeration value="STREAMING"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="apiAudit">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Models audit events from both CM and CM managed services like HDFS, HBase
and Hive. Audits for CM managed services are retrieved from Cloudera Navigator
server.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="timestamp" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[When the audit event was captured.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="service" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Service name associated with this audit.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="username" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The user who performed this operation.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="impersonator" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The impersonating user (or the proxy user) who submitted this operation.
This is usually applicable when using services like Oozie or Hue, who
can be configured to impersonate other users and submit jobs.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ipAddress" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The IP address that the client connected from.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="command" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The command/operation that was requested.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resource" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The resource that the operation was performed on.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="operationText" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The full text of the requested operation. E.g. the full Hive query.
<p>
Available since API v5.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="allowed" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether the operation was allowed or denied by the authorization system.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiAuditList">
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="audits" type="apiAudit" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiBatchRequest">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A batch request, comprised of one or more request elements.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="elements" type="apiBatchRequestElement" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiBatchRequestElement">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A single element of a batch request, often part of a list with other
elements.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="method" type="HTTPMethod" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The type of request (e.g. POST, GET, etc.).]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="url" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The URL of the request. Must not have a scheme, host, or port. The path
should be prefixed with "/api/", and should include path and query
parameters.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="body" type="xs:anyType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Optional body of the request. Must be serialized in accordance with
#getContentType(). For application/json, use
com.cloudera.api.ApiObjectMapper.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="contentType" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Content-Type header of the request element. If unset, the element will be
treated as if the wildcard type had been specified unless it has a body,
in which case it will fall back to application/json.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="acceptType" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Accept header of the request element. The response body (if it exists)
will be in this representation. If unset, the element will be treated as
if the wildcard type had been requested.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="HTTPMethod">
    <xs:restriction base="xs:string">
      <xs:enumeration value="GET"/>
      <xs:enumeration value="POST"/>
      <xs:enumeration value="PUT"/>
      <xs:enumeration value="DELETE"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="apiBatchResponse">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A batch response, comprised of one or more response elements.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="elements" type="apiBatchResponseElement" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="success" type="xs:boolean" minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                <![CDATA[Read-only. True if every response element's
ApiBatchResponseElement#getStatusCode() is in the range [200, 300),
false otherwise.]]>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiBatchResponseElement">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A single element of a batch response, often part of a list with other
elements.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="statusCode" type="xs:int" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Read-only. The HTTP status code of the response.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="response" type="xs:anyType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Read-only. The (optional) serialized body of the response, in the
representation produced by the corresponding API endpoint, such as
application/json.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiBulkCommandList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of commands.
<p>
This list is returned whenever commands are issued in bulk, and contains a
second list with information about errors issuing specific commands.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiCommandList">
        <xs:sequence>
          <xs:element name="errors" minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                <![CDATA[Errors that occurred when issuing individual commands.]]>
              </xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element name="errors" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                  <xs:annotation>
                    <xs:documentation>
                      <![CDATA[Errors that occurred when issuing individual commands.]]>
                    </xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiCdhUpgradeArgs">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Arguments used for the CDH Upgrade command.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="cdhParcelVersion" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[If using parcels, the full version of an already distributed
parcel for the next major CDH version. Default is null, which
indicates this is a package upgrade. Example versions are:
'5.0.0-1.cdh5.0.0.p0.11' or '5.0.2-1.cdh5.0.2.p0.32']]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="cdhPackageVersion" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[If using packages, the full version of the CDH packages being upgraded to,
such as "5.1.2". These packages must already be installed on the cluster
before running the upgrade command. For backwards compatibility, if
"5.0.0" is specified here, then the upgrade command will relax validation
of installed packages to match v6 behavior, only checking major version.
<p>
Introduced in v9. Has no effect in older API versions, which assume
"5.0.0"]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rollingRestartArgs" type="apiRollingUpgradeClusterArgs" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[If provided and rolling restart is available, will perform
rolling restart with the requested arguments. If provided and
rolling restart is not available, errors. If omitted, will do a
regular restart.
<p>
Introduced in v9. Has no effect in older API versions, which must
always do a hard restart.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="deployClientConfig" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Not used starting in v9 - Client config is always deployed as part of
upgrade. For older versions, determines whether client configuration
should be deployed as part of upgrade. Default is true.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="startAllServices" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Not used starting in v9 - All servies are always started as part of
upgrade. For older versions, determines whether all services should be
started should be deployed as part of upgrade. Default is true.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiCluster">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A cluster represents a set of interdependent services running on a set
of hosts. All services on a given cluster are of the same software version
(e.g. CDH4 or CDH5).]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The name of the cluster.
<p>
Immutable since API v6.
<p>
Prior to API v6, will contain the display name of the cluster.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="displayName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The display name of the cluster that is shown in the UI.
<p>
Available since API v6.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="version" type="apiClusterVersion" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The CDH version of the cluster.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="fullVersion" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The full CDH version of the cluster. The expected format is three dot
separated version numbers, e.g. "4.2.1" or "5.0.0". The full version takes
precedence over the version field during cluster creation.
<p>
Available since API v6.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maintenanceMode" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. Whether the cluster is in maintenance mode.
Available since API v2.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maintenanceOwners" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. The list of objects that trigger this cluster to be in
maintenance mode.
Available since API v2.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="maintenanceOwners" type="apiEntityType" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[Readonly. The list of objects that trigger this cluster to be in
maintenance mode.
Available since API v2.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="services" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Optional. Used during import/export of settings.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="services" type="apiService" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[Optional. Used during import/export of settings.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="parcels" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Optional. Used during import/export of settings.
Available since API v4.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="parcels" type="apiParcel" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[Optional. Used during import/export of settings.
Available since API v4.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="clusterUrl" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. Link into the Cloudera Manager web UI for this specific cluster.
<p>
Available since API v10.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="hostsUrl" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. Link into the Cloudera Manager web UI for host table for this cluster.
<p>
Available since API v11.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="entityStatus" type="apiEntityStatus" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. The entity status for this cluster.
Available since API v11.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="uuid" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. The UUID of the cluster.
<p>
Available since API v15.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiClusterList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of clusters.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="clusters" type="apiCluster" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiClusterRef">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A clusterRef references a cluster. To operate on the cluster object,
use the cluster API with the clusterName as the parameter.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="clusterName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The name of the cluster, which uniquely identifies it in a CM installation.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiClusterTemplate">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Details of cluster template]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="cdhVersion" type="xs:string" minOccurs="0"/>
      <xs:element name="products" type="apiProductVersion" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="services" type="apiClusterTemplateService" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="hostTemplates" type="apiClusterTemplateHostTemplate" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="displayName" type="xs:string" minOccurs="0"/>
      <xs:element name="cmVersion" type="xs:string" minOccurs="0"/>
      <xs:element name="instantiator" type="apiClusterTemplateInstantiator" minOccurs="0"/>
      <xs:element name="repositories" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiClusterTemplateConfig">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Config Details: The config can either have a value or ref or variable.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
      <xs:element name="value" type="xs:string" minOccurs="0"/>
      <xs:element name="ref" type="xs:string" minOccurs="0"/>
      <xs:element name="variable" type="xs:string" minOccurs="0"/>
      <xs:element name="autoConfig" type="xs:boolean" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiClusterTemplateHostInfo">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[This contains information about the host or host range on which provided
host template will be applied.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="hostName" type="xs:string" minOccurs="0"/>
      <xs:element name="hostNameRange" type="xs:string" minOccurs="0"/>
      <xs:element name="rackId" type="xs:string" minOccurs="0"/>
      <xs:element name="hostTemplateRefName" type="xs:string" minOccurs="0"/>
      <xs:element name="roleRefNames" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiClusterTemplateHostTemplate">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Host templates will contain information about the role config groups that
should be applied to a host. This basically means a host will have a role
corresponding to each config group.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="refName" type="xs:string" minOccurs="0"/>
      <xs:element name="roleConfigGroupsRefNames" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="cardinality" type="xs:int" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiClusterTemplateInstantiator">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Details of cluster template]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="clusterName" type="xs:string" minOccurs="0"/>
      <xs:element name="hosts" type="apiClusterTemplateHostInfo" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="variables" type="apiClusterTemplateVariable" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="roleConfigGroups" type="apiClusterTemplateRoleConfigGroupInfo" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiClusterTemplateRole">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Role info: This will contain information related to a role referred by some
configuration. During import type this role must be materizalized.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="refName" type="xs:string" minOccurs="0"/>
      <xs:element name="roleType" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiClusterTemplateRoleConfigGroup">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Role config group info.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="refName" type="xs:string" minOccurs="0"/>
      <xs:element name="roleType" type="xs:string" minOccurs="0"/>
      <xs:element name="base" type="xs:boolean" minOccurs="1"/>
      <xs:element name="displayName" type="xs:string" minOccurs="0"/>
      <xs:element name="configs" type="apiClusterTemplateConfig" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiClusterTemplateRoleConfigGroupInfo">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[During import time information related to all the non-base config groups
must be provided.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="rcgRefName" type="xs:string" minOccurs="0"/>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiClusterTemplateService">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Service information]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="refName" type="xs:string" minOccurs="0"/>
      <xs:element name="serviceType" type="xs:string" minOccurs="0"/>
      <xs:element name="serviceConfigs" type="apiClusterTemplateConfig" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="roleConfigGroups" type="apiClusterTemplateRoleConfigGroup" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="roles" type="apiClusterTemplateRole" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="displayName" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiClusterTemplateVariable">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Variable that is referred in cluster template.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
      <xs:element name="value" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiClusterUtilization">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Utilization report information of a Cluster.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="totalCpuCores" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average number of CPU cores available in the cluster during the report window.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgCpuUtilization" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average CPU consumption for the entire cluster during the report window.
This includes consumption by user workloads in YARN and Impala, as well as
consumption by all services running in the cluster.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maxCpuUtilization" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Maximum CPU consumption for the entire cluster during the report window.
This includes consumption by user workloads in YARN and Impala, as well as
consumption by all services running in the cluster.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgCpuDailyPeak" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average daily peak CPU consumption for the entire cluster during the report
window. This includes consumption by user workloads in YARN and Impala, as
well as consumption by all services running in the cluster.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgWorkloadCpu" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average CPU consumption by workloads that ran on the cluster during the
report window. This includes consumption by user workloads in YARN and
Impala.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maxWorkloadCpu" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Maximum CPU consumption by workloads that ran on the cluster during the
report window. This includes consumption by user workloads in YARN and
Impala.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgWorkloadCpuDailyPeak" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average daily peak CPU consumption by workloads that ran on the cluster
during the report window. This includes consumption by user workloads in
YARN and Impala.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="totalMemory" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average physical memory (in bytes) available in the cluster during the
report window. This includes consumption by user workloads in YARN and
Impala, as well as consumption by all services running in the cluster.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgMemoryUtilization" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average memory consumption (as percentage of total memory) for the entire
cluster during the report window. This includes consumption by user
workloads in YARN and Impala, as well as consumption by all services
running in the cluster.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maxMemoryUtilization" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Maximum memory consumption (as percentage of total memory) for the entire
cluster during the report window. This includes consumption by user
workloads in YARN and Impala, as well as consumption by all services
running in the cluster.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgMemoryDailyPeak" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average daily peak memory consumption (as percentage of total memory) for
the entire cluster during the report window. This includes consumption by
user workloads in YARN and Impala, as well as consumption by all services
running in the cluster.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgWorkloadMemory" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average memory consumption (as percentage of total memory) by workloads
that ran on the cluster during the report window. This includes consumption
by user workloads in YARN and Impala.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maxWorkloadMemory" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Maximum memory consumption (as percentage of total memory) by workloads
that ran on the cluster. This includes consumption by user workloads in
YARN and Impala]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgWorkloadMemoryDailyPeak" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average daily peak memory consumption (as percentage of total memory) by
workloads that ran on the cluster during the report window. This includes
consumption by user workloads in YARN and Impala.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="tenantUtilizations" type="apiTenantUtilizationList" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[A list of tenant utilization reports.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maxCpuUtilizationTimestampMs" type="xs:long" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Timestamp corresponding to maximum CPU utilization for the entire cluster
during the report window.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maxMemoryUtilizationTimestampMs" type="xs:long" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Timestamp corresponding to maximum memory utilization for the entire
cluster during the report window.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maxWorkloadCpuTimestampMs" type="xs:long" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Timestamp corresponds to maximum CPU consumption by workloads that
ran on the cluster during the report window.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maxWorkloadMemoryTimestampMs" type="xs:long" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Timestamp corresponds to maximum memory resource consumption by workloads that
ran on the cluster during the report window.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="errorMessage" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Error message while generating utilization report.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="apiClusterVersion">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[The CDH version of the cluster.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="CDH3"/>
      <xs:enumeration value="CDH3u4X"/>
      <xs:enumeration value="CDH4"/>
      <xs:enumeration value="CDH5"/>
      <xs:enumeration value="CDH6"/>
      <xs:enumeration value="UNKNOWN"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="apiCmPeer">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Information about a Cloudera Manager peer instance.
<p>
The requirement and usage of <i>username</i> and <i>password</i> properties
are dependent on the <i>clouderaManagerCreatedUser</i> flag.
<p>
When creating peers, if 'clouderaManagerCreatedUser' is true, the
username/password should be the credentials of a user with administrator
privileges on the remote Cloudera Manager. These credentials are not stored,
they are used to connect to the peer and create a user in that peer. The
newly created user is stored and used for communication with that peer.
If 'clouderaManagerCreatedUser' is false, which is not applicable to
REPLICATION peer type, the username/password to the remote Cloudera Manager
are directly stored and used for all communications with that peer.
<p>
When updating peers, if 'clouderaManagerCreatedUser' is true and
username/password are set, a new remote user will be created. If
'clouderaManagerCreatedUser' is false and username/password are set, the
stored username/password will be updated.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The name of the remote CM instance. Immutable during update.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="type" type="apiCmPeerType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The type of the remote CM instance. Immutable during update.
Available since API v11.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="url" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The URL of the remote CM instance. Mutable during update.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="username" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[When creating peers, if 'clouderaManagerCreatedUser' is true, this should be
the remote admin username for creating a user in remote Cloudera Manager. The
created remote user will then be stored in the local Cloudera Manager DB and
used in later communication. If 'clouderaManagerCreatedUser' is false, which
is not applicable to REPLICATION peer type, Cloudera Manager will store this
username in the local DB directly and use it together with 'password' for
communication.
Mutable during update.
When set during update, if 'clouderaManagerCreatedUser' is true, a new user
in remote Cloudera Manager is created, the newly created remote user will be
stored in the local DB. An attempt to delete the previously created remote
user will be made; If 'clouderaManagerCreatedUser' is false, the
username/password in the local DB will be updated.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="password" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[When creating peers, if 'clouderaManagerCreatedUser' is true, this should be
the remote admin password for creating a user in remote Cloudera Manager. The
created remote user will then be stored in the local Cloudera Manager DB and
used in later communication. If 'clouderaManagerCreatedUser' is false, which
is not applicable to REPLICATION peer type, Cloudera Manager will store this
password in the local DB directly and use it together with 'username' for
communication.
Mutable during update.
When set during update, if 'clouderaManagerCreatedUser' is true, a new user
in remote Cloudera Manager is created, the newly created remote user will be
stored in the local DB. An attempt to delete the previously created remote
user will be made; If 'clouderaManagerCreatedUser' is false, the
username/password in the local DB will be updated.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="clouderaManagerCreatedUser" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[If true, Cloudera Manager creates a remote user using the given
username/password and stores the created user in local DB for use in later
communication. Cloudera Manager will also try to delete the created remote
user when deleting such peers.
If false, Cloudera Manager will store the provided username/password in
the local DB and use them in later communication. 'false' value on this
field is not applicable to REPLICATION peer type.
Available since API v11.
Immutable during update. Should not be set when updating peers.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiCmPeerList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of Cloudera Manager peers.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="cmPeers" type="apiCmPeer" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="apiCmPeerType">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Enum for CM peer types.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="REPLICATION"/>
      <xs:enumeration value="STATUS_AGGREGATION"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="apiCollectDiagnosticDataArguments">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Arguments used for the collectDiagnosticData command.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="startTime" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[This parameter is ignored between CM 4.5 and CM 5.7 versions.
For versions from CM 4.5 to CM 5.7, use endTime and
bundleSizeBytes instead.
For CM 5.7+ versions, startTime is an optional parameter that
is with endTime and bundleSizeBytes. This was introduced
to perform diagnostic data estimation and collection of global
diagnostics data for a certain time range.
The start time (in ISO 8601 format)
of the period to collection statistics for.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="endTime" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The end time (in ISO 8601 format)
of the period to collection statistics for.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="includeInfoLog" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[This parameter is ignored as of CM 4.5.
INFO logs are always collected.
Whether to include INFO level logs.
WARN, ERROR, and FATAL level logs are always included.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ticketNumber" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The support ticket number to attach to this data collection.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comments" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Comments to include with this data collection.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="clusterName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the cluster to collect. If null, collects from all clusters.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="enableMonitorMetricsCollection" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Flag to enable collection of metrics for chart display.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="roles" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[List of roles for which to get logs and metrics.
If set, this restricts the roles for log and metrics collection
to the list specified.
If empty, the default is to get logs for all roles (in the selected
cluster, if one is selected).
Introduced in API v10 of the API.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiCommand">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Provides detailed information about a submitted command.
<p>There are two types of commands: synchronous and asynchronous.
Synchronous commands complete immediately, and their results are passed
back in the returned command object after the execution of an API call.
Outside of that returned object, there is no way to check the result of a
synchronous command.</p>
<p>Asynchronous commands have unique non-negative IDs. They may still be
running when the API call returns. Clients can check the status of such
commands using the API.</p>]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The command ID.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The command name.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="startTime" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The start time.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="endTime" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The end time, if the command is finished.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="active" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether the command is currently active.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="success" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[If the command is finished, whether it was successful.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resultMessage" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[If the command is finished, the result message.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resultDataUrl" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[URL to the command's downloadable result data, if any exists.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="clusterRef" type="apiClusterRef" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Reference to the cluster (for cluster commands only).]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="serviceRef" type="apiServiceRef" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Reference to the service (for service commands only).]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="roleRef" type="apiRoleRef" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Reference to the role (for role commands only).]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="hostRef" type="apiHostRef" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Reference to the host (for host commands only).]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="parent" type="apiCommand" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Reference to the parent command, if any.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="children" type="apiCommandList" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[List of child commands. Only available in the full view.
<p>
The list contains only the summary view of the children.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="canRetry" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[If the command can be retried. Available since V11]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiCommandList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of commands.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="commands" type="apiCommand" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiCommandMetadata">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Provides metadata information about a command.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The name of of the command.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="argSchema" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The command arguments schema.
This is in the form of json schema and
describes the structure of the command
arguments. If null, the command does not
take arguments.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiCommandMetadataList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of command metadata.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                <![CDATA[The list of command metadata objects.]]>
              </xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element name="commandMetadataItems" type="apiCommandMetadata" minOccurs="0" maxOccurs="unbounded">
                  <xs:annotation>
                    <xs:documentation>
                      <![CDATA[The list of command metadata objects.]]>
                    </xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="apiCommissionState">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Represents the Commission state of an entity.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="COMMISSIONED"/>
      <xs:enumeration value="DECOMMISSIONING"/>
      <xs:enumeration value="DECOMMISSIONED"/>
      <xs:enumeration value="UNKNOWN"/>
      <xs:enumeration value="OFFLINING"/>
      <xs:enumeration value="OFFLINED"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="apiConfig">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Model for a configuration parameter.
When an entry's <i>value</i> property is not available, it means the
entry is not configured. This means that the default value for the entry,
if any, will be used. Setting a value to <i>null</i> also can be used
to unset any previously set value for the parameter, reverting to
the default value (if any).]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. The canonical name that identifies this configuration parameter.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="value" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The user-defined value. When absent, the default value (if any)
will be used. Can also be absent, when enumerating allowed configs.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="required" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. Requires "full" view.
Whether this configuration is required for the object. If
any required configuration is not set, operations on the object may not
work.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="default" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. Requires "full" view. The default value.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="displayName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. Requires "full" view. A user-friendly name of the parameters,
as would have been shown in the web UI.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. Requires "full" view. A textual description of the parameter.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="relatedName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. Requires "full" view. If applicable, contains the related
configuration variable used by the source project.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sensitive" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly.
Whether this configuration is sensitive, i.e. contains information such as passwords, which
might affect how the value of this configuration might be shared by the caller.
Available since v14.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="validationState" type="validationState" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. Requires "full" view.
State of the configuration parameter after validation.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="validationMessage" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. Requires "full" view.
A message explaining the parameter's validation state.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="validationWarningsSuppressed" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. Requires "full" view.
Whether validation warnings associated with this parameter are suppressed.
In general, suppressed validation warnings are hidden in the Cloudera
Manager UI. Configurations that do not produce warnings will not contain
this field.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="validationState">
    <xs:restriction base="xs:string">
      <xs:enumeration value="OK"/>
      <xs:enumeration value="WARNING"/>
      <xs:enumeration value="ERROR"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="apiConfigList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of configuration data.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="configs" type="apiConfig" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="apiConfigStalenessStatus">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Represents the configuration staleness status of an entity.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="FRESH"/>
      <xs:enumeration value="STALE_REFRESHABLE"/>
      <xs:enumeration value="STALE"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="apiConfigureForKerberosArguments">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Arguments used to configure a cluster for Kerberos.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="datanodeTransceiverPort" type="xs:long" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The HDFS DataNode transceiver port to use. This will be applied to all DataNode
role configuration groups. If not specified, this will default to 1004.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="datanodeWebPort" type="xs:long" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The HDFS DataNode web port to use. This will be applied to all DataNode
role configuration groups. If not specified, this will default to 1006.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiDashboard">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A dashboard definition. Dashboards are composed of tsquery-based charts.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Returns the dashboard name.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="json" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Returns the json structure for the dashboard. This should be treated as
an opaque blob.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiDashboardList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of dashboard definitions.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="dashboards" type="apiDashboard" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiDeployment">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[This objects represents a deployment including all clusters, hosts,
services, roles, etc in the system. It can be used to save and restore
all settings.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="timestamp" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. This timestamp is provided when you request a deployment and
is not required (or even read) when creating a deployment. This
timestamp is useful if you have multiple deployments saved and
want to determine which one to use as a restore point.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="clusters" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[List of clusters in the system including their services, roles and
complete config values.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="clusters" type="apiCluster" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[List of clusters in the system including their services, roles and
complete config values.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="hosts" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[List of hosts in the system]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="hosts" type="apiHost" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[List of hosts in the system]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="users" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[List of all users in the system]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="users" type="apiUser" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[List of all users in the system]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="versionInfo" type="apiVersionInfo" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Full version information about the running Cloudera Manager instance]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="managementService" type="apiService" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The full configuration of the Cloudera Manager management service
including all the management roles and their config values]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="managerSettings" type="apiConfigList" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The full configuration of Cloudera Manager itself including licensing info]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="allHostsConfig" type="apiConfigList" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Configuration parameters that apply to all hosts, unless overridden at
the host level. Available since API v3.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="peers" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The list of peers configured in Cloudera Manager.
Available since API v3.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="peers" type="apiCmPeer" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[The list of peers configured in Cloudera Manager.
Available since API v3.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="hostTemplates" type="apiHostTemplateList" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The list of all host templates in Cloudera Manager.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiDisableJtHaArguments">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Arguments used for disable JT HA command.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="activeName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the JobTracker that will be active after HA is disabled.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiDisableLlamaHaArguments">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Arguments used for disable Llama HA command.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="activeName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the Llama role that will be active after HA is disabled.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiDisableNnHaArguments">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Arguments used for Disable NameNode High Availability command.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="activeNnName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the NamdeNode role that is going to be active after
High Availability is disabled.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="snnHostId" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Id of the host where the new SecondaryNameNode will be created.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="snnCheckpointDirList" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[List of directories used for checkpointing by the new SecondaryNameNode.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="snnName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the new SecondaryNameNode role (Optional).]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiDisableOozieHaArguments">
    <xs:sequence>
      <xs:element name="activeName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the Oozie Server that will be active after HA is disabled.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiDisableRmHaArguments">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Arguments used for Disable RM HA command.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="activeName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the ResourceManager that will be active after HA is disabled.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiDisableSentryHaArgs">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Arguments used for disable Sentry HA API call.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="activeName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the single role that will remain active after HA is disabled.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiEcho">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[The echoMessage carries a message to be echoed back from the API service.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiEnableJtHaArguments">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Arguments used for enable JT HA command.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="newJtHostId" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Id of host on which second JobTracker role will be added.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="forceInitZNode" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Initialize the ZNode even if it already exists. This can happen if
JobTracker HA was enabled before and then disabled. Disable operation
doesn't delete this ZNode. Defaults to true.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="zkServiceName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the ZooKeeper service that will be used for auto-failover.
This is an optional parameter if the MapReduce to ZooKeeper dependency is
already set in CM.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="newJtRoleName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the second JobTracker role to be created (Optional)]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="fc1RoleName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of first Failover Controller role to be created.
This is the Failover Controller co-located with the current
JobTracker (Optional)]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="fc2RoleName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of second Failover Controller role to be created.
This is the Failover Controller co-located with the new
JobTracker (Optional)]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="logicalName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Logical name of the JobTracker pair. If value is not provided,
"logicaljt" is used as the default. The name can contain
only alphanumeric characters and "-".
<p>
Available since API v8.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiEnableLlamaHaArguments">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Arguments used for enable Llama HA command.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="newLlamaHostId" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[HostId of the host on which the second Llama role will be created.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="newLlamaRoleName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the second Llama role to be created (optional).]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="zkServiceName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the ZooKeeper service that will be used for auto-failover.
This argument may be omitted if the ZooKeeper dependency for Impala
is already configured.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiEnableLlamaRmArguments">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Arguments used for enable Llama RM command.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="llama1HostId" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[HostId of the host on which the first Llama role will be created.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="llama1RoleName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the first Llama role to be created (optional).]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="llama2HostId" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[HostId of the host on which the second Llama role will be created.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="llama2RoleName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the second Llama role to be created (optional).]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="zkServiceName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the ZooKeeper service that will be used for auto-failover.
Only relevant when enabling Llama RM in HA mode (i.e., when two
Llama roles are being created). This argument may be omitted if
the ZooKeeper dependency for Impala is already configured.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="skipRestart" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Skip the restart of Yarn, Impala, and their dependent services,
and don't deploy client configuration. Default is false (i.e.,
by default, the services are restarted and client configuration
is deployed).]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiEnableNnHaArguments">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Arguments used for Enable NameNode High Availability command.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="activeNnName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the NameNode role that is going to be made Highly Available.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="standbyNnName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the new Standby NameNode role that will be created during the
command (Optional).]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="standbyNnHostId" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Id of the host on which new Standby NameNode will be created.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="standbyNameDirList" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[List of directories for the new Standby NameNode.
If not provided then it will use same dirs as Active NameNode.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nameservice" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Nameservice to be used while enabling Highly Available.
It must be specified if Active NameNode isn't configured with it.
If Active NameNode is already configured, then this need not
be specified. However, if it is still specified, it must match
the existing config for the Active NameNode.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="qjName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the journal located on each JournalNodes' filesystem.
This can be optionally provided if the config hasn't already been set for the
Active NameNode.
If this isn't provided and Active NameNode doesn't also have the config,
then nameservice is used by default. If Active NameNode already has this configured,
then it much match the existing config.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="activeFcName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the FailoverController role to be created on
Active NameNode's host (Optional).]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="standbyFcName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the FailoverController role to be created on
Standby NameNode's host (Optional).]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="zkServiceName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the ZooKeeper service to be used for Auto-Failover.
This MUST be provided if HDFS doesn't have a ZooKeeper dependency.
If the dependency is already set, then this should be the name of the same
ZooKeeper service, but can also be omitted in that case.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="jns" type="apiJournalNodeArguments" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Arguments for the JournalNodes to be created during the command.
Must be provided only if JournalNodes don't exist already in HDFS.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="forceInitZNode" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Boolean indicating if the ZNode should be force initialized if it is
already present. Useful while re-enabling High Availability. (Default: TRUE)]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="clearExistingStandbyNameDirs" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Boolean indicating if the existing name directories for Standby NameNode
should be cleared during the workflow.
Useful while re-enabling High Availability. (Default: TRUE)]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="clearExistingJnEditsDir" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Boolean indicating if the existing edits directories for the JournalNodes
for the specified nameservice should be cleared during the workflow.
Useful while re-enabling High Availability. (Default: TRUE)]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiEnableOozieHaArguments">
    <xs:sequence>
      <xs:element name="newOozieServerHostIds" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[IDs of the hosts on which new Oozie Servers will be added.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="newOozieServerRoleNames" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Names of the new Oozie Servers. This is an optional argument,
but if provided, it should match the length of host IDs provided.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="zkServiceName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the ZooKeeper service that will be used for Oozie HA.
This is an optional parameter if the Oozie to ZooKeeper dependency is
already set in CM.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="loadBalancerHostname" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Hostname of the load balancer used for Oozie HA.
Optional if load balancer host and ports are already set in CM.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="loadBalancerPort" type="xs:long" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[HTTP port of the load balancer used for Oozie HA.
Optional if load balancer host and ports are already set in CM.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="loadBalancerSslPort" type="xs:long" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[HTTPS port of the load balancer used for Oozie HA when SSL is enabled.
This port is only used for oozie.base.url -- the callback is always
on HTTP.
Optional if load balancer host and ports are already set in CM.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="loadBalancerHostPort" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Address of the load balancer used for Oozie HA.
This is an optional parameter if this config is already set in CM.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiEnableRmHaArguments">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Arguments used for enable RM HA command.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="newRmHostId" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Id of host on which second ResourceManager role will be added.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="newRmRoleName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the second ResourceManager role to be created (Optional)]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="zkServiceName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the ZooKeeper service that will be used for auto-failover.
This is an optional parameter if the Yarn to ZooKeeper dependency is
already set in CM.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiEnableSentryHaArgs">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Arguments used for enable Sentry HA command.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="newSentryHostId" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Id of host on which new Sentry Server role will be added.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="newSentryRoleName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the new Sentry Server role to be created. This is an
optional argument.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="zkServiceName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the ZooKeeper service that will be used for Sentry HA.
This is an optional parameter if the Sentry to ZooKeeper dependency is
already set in CM.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rrcArgs" type="apiSimpleRollingRestartClusterArgs" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="apiEntityStatus">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[The single value used by the Cloudera Manager UI to represent the status of
the entity. It is computed from a variety of other entity-specific states,
not all values apply to all entities. For example, STARTING/STOPPING do not
apply to a host.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNKNOWN"/>
      <xs:enumeration value="NONE"/>
      <xs:enumeration value="STOPPED"/>
      <xs:enumeration value="DOWN"/>
      <xs:enumeration value="UNKNOWN_HEALTH"/>
      <xs:enumeration value="DISABLED_HEALTH"/>
      <xs:enumeration value="CONCERNING_HEALTH"/>
      <xs:enumeration value="BAD_HEALTH"/>
      <xs:enumeration value="GOOD_HEALTH"/>
      <xs:enumeration value="STARTING"/>
      <xs:enumeration value="STOPPING"/>
      <xs:enumeration value="HISTORY_NOT_AVAILABLE"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="apiEntityType">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Represents the types of entities.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="CLUSTER"/>
      <xs:enumeration value="SERVICE"/>
      <xs:enumeration value="ROLE"/>
      <xs:enumeration value="HOST"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="apiEvent">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Events model noteworthy incidents in Cloudera Manager or the managed
Hadoop cluster. An event carries its event category, severity, and a
string content. They also have generic attributes, which are free-form
key value pairs. Important events may be promoted into alerts.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[A unique ID for this event.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="content" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The content payload of this event.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="timeOccurred" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[When the event was generated.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="timeReceived" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[When the event was stored by Cloudera Manager. Events do not arrive in
the order that they are generated. If you are writing an event poller,
this is a useful field to query.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="category" type="apiEventCategory" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The category of this event -- whether it is a health event, an audit
event, an activity event, etc.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="severity" type="apiEventSeverity" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The severity of the event.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="alert" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether the event is promoted to an alert according to configuration.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="attributes" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[A list of key-value attribute pairs.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="attributes" type="apiEventAttribute" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[A list of key-value attribute pairs.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiEventAttribute">
    <xs:sequence>
      <xs:element name="values" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="values" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string"/>
  </xs:complexType>
  <xs:simpleType name="apiEventCategory">
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNKNOWN"/>
      <xs:enumeration value="HEALTH_EVENT"/>
      <xs:enumeration value="LOG_EVENT"/>
      <xs:enumeration value="AUDIT_EVENT"/>
      <xs:enumeration value="ACTIVITY_EVENT"/>
      <xs:enumeration value="HBASE"/>
      <xs:enumeration value="SYSTEM"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="apiEventQueryResult">
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="totalResults" type="xs:long" minOccurs="1">
            <xs:annotation>
              <xs:documentation>
                <![CDATA[The total number of matched results. Some are possibly not shown due
to pagination.]]>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="events" type="apiEvent" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="apiEventSeverity">
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNKNOWN"/>
      <xs:enumeration value="INFORMATIONAL"/>
      <xs:enumeration value="IMPORTANT"/>
      <xs:enumeration value="CRITICAL"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="apiExternalAccount">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Represents an instantiation of an external account type, referencing a supported
external account type, via the typeName field, along with suitable configuration to
access an external resource of the provided type.
The typeName field must match the name of an external account type.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Represents the intial name of the account; used to uniquely identify this account.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="displayName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Represents a modifiable label to identify this account for user-visible purposes.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="createdTime" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Represents the time of creation for this account.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="lastModifiedTime" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Represents the last modification time for this account.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="typeName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Represents the Type ID of a supported external account type.
The type represented by this field dictates which configuration options must be defined
for this account.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="accountConfigs" type="apiConfigList" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Represents the account configuration for this account.
When an account is retrieved from the server,
the configs returned must match allowed configuration for the type of this account.
When specified for creation of a new account or for the update of an existing account,
this field must include every required configuration parameter specified in the type's definition,
with the account configuration's value field specified to represent the specific
configuration desired for this account.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiExternalAccountCategory">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Type representing an external account category.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Represents an identifier for a category.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="displayName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Represents a localized display name for a category.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Represents a localized description for a category.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiExternalAccountCategoryList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Represents a list of external account categories.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="externalAccountCategories" type="apiExternalAccountCategory" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiExternalAccountList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Represents a list of external accounts.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="externalAccounts" type="apiExternalAccount" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiExternalAccountType">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A supported external account type.
An external account type represents an external authentication source that is used by
Cloudera Manager in its APIs to take suitable actions that require authentication to an
external service.
An external account type is uniquely identified by a server-generated ID and identifies with
a category identifier: e.g. The "AWS" category has an account type "AWS_Access_Key_Authorization"]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Represents the immutable name for this account.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="categoryName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Represents the category of this account.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="type" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Represents the type for this account.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="displayName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Represents the localized display name for this account.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Represents the localized description for this account type.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="allowedAccountConfigs" type="apiConfigList" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Represents the list of allowed account configs.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiExternalAccountTypeList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Represents a list of external account types.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="externalAccountTypes" type="apiExternalAccountType" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiHBaseSnapshot">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[An HBase snapshot descriptor.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="snapshotName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Snapshot name.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="tableName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the table this snapshot is for.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="creationTime" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Snapshot creation time.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="storage" type="storage" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The location where a snapshot is stored.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="storage">
    <xs:restriction base="xs:string">
      <xs:enumeration value="LOCAL"/>
      <xs:enumeration value="REMOTE_S3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="apiHBaseSnapshotError">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A HBase snapshot operation error.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="tableName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the table.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="snapshotName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the snapshot.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="storage" type="storage" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The location of the snapshot.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="error" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Description of the error.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiHBaseSnapshotPolicyArguments">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[HBase specific snapshot policy arguments.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="tableRegExps" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The regular expressions specifying the tables. Tables matching any of them
will be eligible for snapshot creation.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="tableRegExps" type="xs:string" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[The regular expressions specifying the tables. Tables matching any of them
will be eligible for snapshot creation.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="storage" type="storage" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The location where the snapshots should be stored.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiHBaseSnapshotResult">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Detailed information about an HBase snapshot command.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="processedTableCount" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of processed tables.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="processedTables" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The list of processed tables.
<p/>
This is only available in the full view.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="processedTables" type="xs:string" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[The list of processed tables.
<p/>
This is only available in the full view.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="unprocessedTableCount" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of unprocessed tables.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="unprocessedTables" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The list of unprocessed tables. Note that tables that are currently being
processed will also be included in this list.
<p/>
This is only available in the full view.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="unprocessedTables" type="xs:string" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[The list of unprocessed tables. Note that tables that are currently being
processed will also be included in this list.
<p/>
This is only available in the full view.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createdSnapshotCount" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of snapshots created.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="createdSnapshots" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[List of snapshots created.
<p/>
This is only available in the full view.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="createdSnapshots" type="apiHBaseSnapshot" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[List of snapshots created.
<p/>
This is only available in the full view.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deletedSnapshotCount" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of snapshots deleted.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="deletedSnapshots" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[List of snapshots deleted.
<p/>
This is only available in the full view.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="deletedSnapshots" type="apiHBaseSnapshot" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[List of snapshots deleted.
<p/>
This is only available in the full view.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="creationErrorCount" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of errors detected when creating snapshots.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="creationErrors" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[List of errors encountered when creating snapshots.
<p/>
This is only available in the full view.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="creationErrors" type="apiHBaseSnapshotError" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[List of errors encountered when creating snapshots.
<p/>
This is only available in the full view.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deletionErrorCount" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of errors detected when deleting snapshots.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="deletionErrors" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[List of errors encountered when deleting snapshots.
<p/>
This is only available in the full view.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="deletionErrors" type="apiHBaseSnapshotError" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[List of errors encountered when deleting snapshots.
<p/>
This is only available in the full view.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiHdfsCloudReplicationArguments">
    <xs:complexContent>
      <xs:extension base="apiHdfsReplicationArguments">
        <xs:sequence>
          <xs:element name="sourceAccount" type="xs:string" minOccurs="0"/>
          <xs:element name="destinationAccount" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiHdfsDisableHaArguments">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Arguments used for the HDFS disable HA command.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="activeName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the the NameNode to be kept.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="secondaryName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the SecondaryNamenode to associate with the active NameNode.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="startDependentServices" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether to re-start dependent services. Defaults to true.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="deployClientConfigs" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether to re-deploy client configurations. Defaults to true.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="disableQuorumStorage" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether to disable Quorum-based Storage. Defaults to false.
Available since API v2.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiHdfsFailoverArguments">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Arguments used when enabling HDFS automatic failover.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="nameservice" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Nameservice for which to enable automatic failover.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="zooKeeperService" type="apiServiceRef" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The ZooKeeper service to use.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="activeFCName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the failover controller to create for the active NameNode.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="standByFCName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the failover controller to create for the stand-by NameNode.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiHdfsHaArguments">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Arguments used for HDFS HA commands.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="activeName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the active NameNode.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="activeSharedEditsPath" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Path to the shared edits directory on the active NameNode's host.
Ignored if Quorum-based Storage is being enabled.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="standByName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the stand-by Namenode.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="standBySharedEditsPath" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Path to the shared edits directory on the stand-by NameNode's host.
Ignored if Quorum-based Storage is being enabled.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nameservice" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Nameservice that identifies the HA pair.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="startDependentServices" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether to re-start dependent services. Defaults to true.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="deployClientConfigs" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether to re-deploy client configurations. Defaults to true.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="enableQuorumStorage" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[This parameter has been deprecated as of CM 5.0, where HA
is only supported using Quorum-based Storage.
<p>
Whether to enable Quorum-based Storage.
Enabling Quorum-based Storage requires a minimum of three and
an odd number of JournalNodes to be created and configured
before enabling HDFS HA.
<p>
Available since API v2.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiHdfsReplicationArguments">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Replication arguments for HDFS.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="sourceService" type="apiServiceRef" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The service to replicate from.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourcePath" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The path to replicate.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="destinationPath" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The destination to replicate to.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="mapreduceServiceName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The mapreduce service to use for the replication job.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="schedulerPoolName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the scheduler pool to use when submitting the MapReduce job.
Currently supports the capacity and fair schedulers. The option is
ignored if a different scheduler is configured.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The user which will execute the MapReduce job. Required if running with
Kerberos enabled.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sourceUser" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The user which will perform operations on source cluster. Required if
running with Kerberos enabled.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="numMaps" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The number of mappers to use for the mapreduce replication job.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dryRun" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether to perform a dry run. Defaults to false.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="bandwidthPerMap" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The maximum bandwidth (in MB) per mapper in the mapreduce replication
job.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="abortOnError" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether to abort on a replication failure. Defaults to false.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="removeMissingFiles" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether to delete destination files that are missing in source. Defaults
to false.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="preserveReplicationCount" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether to preserve the HDFS replication count. Defaults to false.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="preserveBlockSize" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether to preserve the HDFS block size. Defaults to false.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="preservePermissions" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether to preserve the HDFS owner, group and permissions. Defaults to
false.
Starting from V10, it also preserves ACLs. Defaults to null (no preserve).
ACLs is preserved if both clusters enable ACL support, and replication
ignores any ACL related failures.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="logPath" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The HDFS path where the replication log files should be written to.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="skipChecksumChecks" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether to skip checksum based file validation during
replication. Defaults to false.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="skipListingChecksumChecks" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether to skip checksum based file comparison during
replication. Defaults to false.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="skipTrash" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether to permanently delete destination files that are missing in source.
Defaults to null.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="replicationStrategy" type="replicationStrategy" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The strategy for distributing the file replication tasks among the mappers
of the MR job associated with a replication. Default is
ReplicationStrategy#STATIC.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="preserveXAttrs" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether to preserve XAttrs, default to false
This is introduced in V10. To preserve XAttrs, both CDH versions
should be >= 5.2. Replication fails if either cluster does not support
XAttrs.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="exclusionFilters" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Specify regular expression strings to match full paths of files and directories
matching source paths and exclude them from the replication. Optional.
Available since V11.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="raiseSnapshotDiffFailures" type="xs:boolean" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="replicationStrategy">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[The strategy for distributing the file replication tasks among the mappers
of the MR job associated with a replication.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="STATIC"/>
      <xs:enumeration value="DYNAMIC"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="apiHdfsReplicationCounter">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A counter in an HDFS replication job.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="group" type="xs:string" minOccurs="0"/>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
      <xs:element name="value" type="xs:long" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiHdfsReplicationResult">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Detailed information about an HDFS replication job.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="progress" type="xs:int" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The file copy progress percentage.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="throughput" type="xs:double" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The data throughput in KB/s.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="remainingTime" type="xs:int" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The time remaining for mapper phase (seconds).]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="estimatedCompletionTime" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The estimated completion time for the mapper phase.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="counters" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The counters collected from the replication job.
<p/>
Starting with API v4, the full list of counters is only available in the
full view.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="counters" type="apiHdfsReplicationCounter" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[The counters collected from the replication job.
<p/>
Starting with API v4, the full list of counters is only available in the
full view.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="numFilesDryRun" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The number of files found to copy.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="numBytesDryRun" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The number of bytes found to copy.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="numFilesExpected" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The number of files expected to be copied.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="numBytesExpected" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The number of bytes expected to be copied.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="numFilesCopied" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The number of files actually copied.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="numBytesCopied" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The number of bytes actually copied.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="numFilesSkipped" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The number of files that were unchanged and thus skipped during
copying.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="numBytesSkipped" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The aggregate number of bytes in the skipped files.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="numFilesDeleted" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The number of files deleted since they were present at destination, but
missing from source.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="numFilesCopyFailed" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The number of files for which copy failed.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="numBytesCopyFailed" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The aggregate number of bytes in the files for which copy failed.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="setupError" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The error that happened during job setup, if any.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="jobId" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Read-only. The MapReduce job ID for the replication job.
Available since API v4.
<p/>
This can be used to query information about the replication job from the
MapReduce server where it was executed. Refer to the "/activities"
resource for services for further details.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="jobDetailsUri" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Read-only. The URI (relative to the CM server's root) where to find the
Activity Monitor page for the job. Available since API v4.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dryRun" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether this was a dry run.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="snapshottedDirs" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The list of directories for which snapshots were taken and used as part of
this replication.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="runAsUser" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Returns run-as user name.
Available since API v11.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="runOnSourceAsUser" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Returns run-as user name for source cluster.
Available since API v18.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="failedFiles" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The list of files that failed during replication.
Available since API v11.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiHdfsSnapshot">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[An HDFS snapshot descriptor.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="path" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Snapshotted path.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="snapshotName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Snapshot name.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="snapshotPath" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Read-only. Fully qualified path for the snapshot version of "path".
<p/>
For example, if a snapshot "s1" is present at "/a/.snapshot/s1, then the
snapshot path corresponding to "s1" for path "/a/b" will be
"/a/.snapshot/s1/b".]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="creationTime" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Snapshot creation time.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiHdfsSnapshotError">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[An HDFS snapshot operation error.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="path" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Path for which the snapshot error occurred.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="snapshotName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of snapshot for which error occurred.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="error" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Description of the error.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiHdfsSnapshotPolicyArguments">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[HDFS specific snapshot policy arguments.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="pathPatterns" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The path patterns specifying the paths. Paths matching any of them will be
eligible for snapshot creation.
<p/>
The pattern matching characters that can be specific are those supported
by HDFS. please see the documentation for HDFS globs for more details.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="pathPatterns" type="xs:string" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[The path patterns specifying the paths. Paths matching any of them will be
eligible for snapshot creation.
<p/>
The pattern matching characters that can be specific are those supported
by HDFS. please see the documentation for HDFS globs for more details.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiHdfsSnapshotResult">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Detailed information about an HDFS snapshot command.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="processedPathCount" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of processed paths.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="processedPaths" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The list of processed paths.
<p/>
This is only available in the full view.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="processedPaths" type="xs:string" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[The list of processed paths.
<p/>
This is only available in the full view.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="unprocessedPathCount" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of unprocessed paths.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="unprocessedPaths" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The list of unprocessed paths. Note that paths that are currently being
processed will also be included in this list.
<p/>
This is only available in the full view.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="unprocessedPaths" type="xs:string" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[The list of unprocessed paths. Note that paths that are currently being
processed will also be included in this list.
<p/>
This is only available in the full view.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createdSnapshotCount" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of snapshots created.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="createdSnapshots" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[List of snapshots created.
<p/>
This is only available in the full view.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="createdSnapshots" type="apiHdfsSnapshot" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[List of snapshots created.
<p/>
This is only available in the full view.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deletedSnapshotCount" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of snapshots deleted.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="deletedSnapshots" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[List of snapshots deleted.
<p/>
This is only available in the full view.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="deletedSnapshots" type="apiHdfsSnapshot" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[List of snapshots deleted.
<p/>
This is only available in the full view.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="creationErrorCount" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of errors detected when creating snapshots.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="creationErrors" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[List of errors encountered when creating snapshots.
<p/>
This is only available in the full view.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="creationErrors" type="apiHdfsSnapshotError" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[List of errors encountered when creating snapshots.
<p/>
This is only available in the full view.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deletionErrorCount" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of errors detected when deleting snapshots.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="deletionErrors" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[List of errors encountered when deleting snapshots.
<p/>
This is only available in the full view.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="deletionErrors" type="apiHdfsSnapshotError" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[List of errors encountered when deleting snapshots.
<p/>
This is only available in the full view.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiHdfsUsageReport">
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="lastUpdateTime" type="xs:dateTime" minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                <![CDATA[The time when HDFS usage info was last collected. No information
beyond this time can be provided.]]>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="items" minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                <![CDATA[A list of per-user usage information at the requested
time granularity.]]>
              </xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element name="reportRows" type="apiHdfsUsageReportRow" minOccurs="0" maxOccurs="unbounded">
                  <xs:annotation>
                    <xs:documentation>
                      <![CDATA[A list of per-user usage information at the requested
time granularity.]]>
                    </xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiHdfsUsageReportRow">
    <xs:sequence>
      <xs:element name="date" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The date of the report row data.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="user" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The user being reported.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="size" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Total size (in bytes) of the files owned by this user. This does not
include replication in HDFS.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rawSize" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Total size (in bytes) of all the replicas of all the files owned by
this user.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="numFiles" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of files owned by this user.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiHealthCheck">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Represents a result from a health test performed by Cloudera Manager for an
entity.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Unique name of this health check.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="summary" type="apiHealthSummary" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The summary status of this check.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="explanation" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The explanation of this health check.
Available since v11.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="suppressed" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether this health test is suppressed. A suppressed health test is not
considered when computing an entity's overall health.
Available since v11.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="apiHealthSummary">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Represents of the high-level health status of a subject in the cluster.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="DISABLED"/>
      <xs:enumeration value="HISTORY_NOT_AVAILABLE"/>
      <xs:enumeration value="NOT_AVAILABLE"/>
      <xs:enumeration value="GOOD"/>
      <xs:enumeration value="CONCERNING"/>
      <xs:enumeration value="BAD"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="apiHiveCloudReplicationArguments">
    <xs:complexContent>
      <xs:extension base="apiHiveReplicationArguments">
        <xs:sequence>
          <xs:element name="sourceAccount" type="xs:string" minOccurs="0"/>
          <xs:element name="destinationAccount" type="xs:string" minOccurs="0"/>
          <xs:element name="cloudRootPath" type="xs:string" minOccurs="0"/>
          <xs:element name="replicationOption" type="replicationOption" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="replicationOption">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[This will decide how cloud replication will take place]]>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="METADATA_ONLY"/>
      <xs:enumeration value="METADATA_AND_DATA"/>
      <xs:enumeration value="KEEP_DATA_IN_CLOUD"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="apiHiveReplicationArguments">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Replication arguments for Hive services.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="sourceService" type="apiServiceRef" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The service to replicate from.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="tableFilters" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Filters for tables to include in the replication. Optional. If not
provided, include all tables in all databases.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="tableFilters" type="apiHiveTable" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[Filters for tables to include in the replication. Optional. If not
provided, include all tables in all databases.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="exportDir" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Directory, in the HDFS service where the target Hive service's data is
stored, where the export file will be saved. Optional. If not provided,
Cloudera Manager will pick a directory for storing the data.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="force" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether to force overwriting of mismatched tables.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="replicateData" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether to replicate table data stored in HDFS.
<p/>
If set, the "hdfsArguments" property must be set to configure the
HDFS replication job.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="hdfsArguments" type="apiHdfsReplicationArguments" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Arguments for the HDFS replication job.
<p/>
This must be provided when choosing to replicate table data stored in HDFS.
The "sourceService", "sourcePath" and "dryRun" properties of the HDFS
arguments are ignored; their values are derived from the Hive replication's
information.
<p/>
The "destinationPath" property is used slightly differently from the
usual HDFS replication jobs. It is used to map the root path of the
source service into the target service. It may be omitted, in which
case the source and target paths will match.
<p/>
Example: if the destination path is set to "/new_root", a "/foo/bar" path
in the source will be stored in "/new_root/foo/bar" in the target.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="replicateImpalaMetadata" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether to replicate the impala metadata. (i.e. the metadata for impala
UDFs and their corresponding binaries in HDFS).]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="runInvalidateMetadata" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether to run invalidate metadata query or not]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dryRun" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether to perform a dry run. Defaults to false.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="numThreads" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of threads to use in multi-threaded export/import phase]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiHiveReplicationError">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A Hive replication error.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="database" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the database.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="tableName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the table.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="impalaUDF" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[UDF signature, includes the UDF name and parameter types.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="hiveUDF" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Hive UDF signature, includes the UDF name and parameter types.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="error" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Description of the error.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiHiveReplicationResult">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Detailed information about a Hive replication job.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="phase" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Phase the replication is in.
<p/>
If the replication job is still active, this will contain a string
describing the current phase. This will be one of: EXPORT, DATA or
IMPORT, for, respectively, exporting the source metastore information,
replicating table data (if configured), and importing metastore
information in the target.
<p/>
This value will not be present if the replication is not active.
<p/>
Available since API v4.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="tableCount" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of tables that were successfully replicated. Available since API v4.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="tables" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The list of tables successfully replicated.
<p/>
Since API v4, this is only available in the full view.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="tables" type="apiHiveTable" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[The list of tables successfully replicated.
<p/>
Since API v4, this is only available in the full view.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="impalaUDFCount" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of impala UDFs that were successfully replicated. Available since
API v6.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="hiveUDFCount" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of hive UDFs that were successfully replicated. Available since
API v14.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="impalaUDFs" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The list of Impala UDFs successfully replicated. Available since API v6
in the full view.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="impalaUDFs" type="apiImpalaUDF" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[The list of Impala UDFs successfully replicated. Available since API v6
in the full view.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="hiveUDFs" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The list of Impala UDFs successfully replicated. Available since API v6
in the full view.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="hiveUDFs" type="apiHiveUDF" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[The list of Impala UDFs successfully replicated. Available since API v6
in the full view.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="errorCount" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of errors detected during replication job.
Available since API v4.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="errors" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[List of errors encountered during replication.
<p/>
Since API v4, this is only available in the full view.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="errors" type="apiHiveReplicationError" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[List of errors encountered during replication.
<p/>
Since API v4, this is only available in the full view.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="dataReplicationResult" type="apiHdfsReplicationResult" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Result of table data replication, if performed.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dryRun" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether this was a dry run.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="runAsUser" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the of proxy user, if any.
Available since API v11.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="runOnSourceAsUser" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the source proxy user, if any.
Available since API v18.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="statsAvailable" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether stats are available to display or not.
Available since API v19.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dbProcessed" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of Db's Imported/Exported.
Available since API v19.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="tableProcessed" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of Tables Imported/Exported.
Available since API v19.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="partitionProcessed" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of Partitions Imported/Exported.
Available since API v19.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="functionProcessed" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of Functions Imported/Exported.
Available since API v19.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="indexProcessed" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of Indexes Imported/Exported.
Available since API v19.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="statsProcessed" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of Table and Partitions Statistics Imported/Exported.
Available since API v19.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dbExpected" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of Db's Expected.
Available since API v19.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="tableExpected" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of Tables Expected.
Available since API v19.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="partitionExpected" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of Partitions Expected.
Available since API v19.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="functionExpected" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of Functions Expected.
Available since API v19.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="indexExpected" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of Indexes Expected.
Available since API v19.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="statsExpected" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of Table and Partition Statistics Expected.
Available since API v19.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiHiveTable">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A Hive table identifier.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="database" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the database to which this table belongs.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="tableName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the table. When used as input for a replication job, this can
be a regular expression that matches several table names. Refer to the
Hive documentation for the syntax of regular expressions.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiHiveUDF">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[An hive UDF identifier.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="database" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the database to which this UDF belongs.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="signature" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[UDF signature, includes the UDF name and parameter types.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiHost">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[This is the model for a host in the system.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="hostId" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[A unique host identifier.
This is not the same as the hostname (FQDN). It is a distinct
value that remains the same even if the hostname changes.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ipAddress" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The host IP address. This field is not mutable after the initial creation.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="hostname" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The hostname. This field is not mutable after the initial creation.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rackId" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The rack ID for this host.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="lastHeartbeat" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. Requires "full" view.
When the host agent sent the last heartbeat.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="roleRefs" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. Requires "full" view.
The list of roles assigned to this host.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="roleRefs" type="apiRoleRef" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[Readonly. Requires "full" view.
The list of roles assigned to this host.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="healthSummary" type="apiHealthSummary" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. Requires "full" view.
The high-level health status of this host.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="healthChecks" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. Requires "full" view.
The list of health checks performed on the host, with their results.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="healthChecks" type="apiHealthCheck" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[Readonly. Requires "full" view.
The list of health checks performed on the host, with their results.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="hostUrl" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly.
A URL into the Cloudera Manager web UI for this specific host.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maintenanceMode" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. Whether the host is in maintenance mode.
Available since API v2.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="commissionState" type="apiCommissionState" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. The commission state of this role.
Available since API v2.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maintenanceOwners" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. The list of objects that trigger this host to be in
maintenance mode.
Available since API v2.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="maintenanceOwners" type="apiEntityType" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[Readonly. The list of objects that trigger this host to be in
maintenance mode.
Available since API v2.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="config" type="apiConfigList" minOccurs="0"/>
      <xs:element name="numCores" type="xs:long" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. The number of logical CPU cores on this host. Only populated
after the host has heartbeated to the server.
Available since API v4.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="numPhysicalCores" type="xs:long" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. The number of physical CPU cores on this host. Only populated
after the host has heartbeated to the server.
Available since API v9.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="totalPhysMemBytes" type="xs:long" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. The amount of physical RAM on this host, in bytes. Only
populated after the host has heartbeated to the server.
Available since API v4.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="entityStatus" type="apiEntityStatus" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. The entity status for this host.
Available since API v11.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="clusterRef" type="apiClusterRef" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. A reference to the enclosing cluster. This might be null if the
host is not yet assigned to a cluster.
Available since API v11.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiHostInstallArguments">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Arguments to perform installation on one
or more hosts]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="hostNames" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[List of hosts to configure for use with Cloudera Manager.
A host may be specified by a hostname (FQDN) or an
IP address.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="hostNames" type="xs:string" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[List of hosts to configure for use with Cloudera Manager.
A host may be specified by a hostname (FQDN) or an
IP address.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sshPort" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[SSH port. If unset, defaults to 22.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The username used to authenticate with the hosts.
Root access to your hosts is required to install Cloudera packages.
The installer will connect to your hosts via SSH and log in either
directly as root or as another user with password-less sudo
privileges to become root.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="password" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The password used to authenticate with the hosts.
Specify either this or a private key.
For password-less login, use an empty string as
password.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="privateKey" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The private key to authenticate with the hosts.
Specify either this or a password.
<br>
The private key, if specified, needs to be a
standard PEM-encoded key as a single string, with all line breaks
replaced with the line-feed control character '\n'.
<br>
A value will typically look like the following string:
<br>
-----BEGIN RSA PRIVATE KEY-----\n[base-64 encoded key]\n-----END RSA PRIVATE KEY-----
<br>]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="passphrase" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The passphrase associated with the private key
used to authenticate with the hosts (optional).]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="parallelInstallCount" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of simultaneous installations.
Defaults to 10. Running a large number of
installations at once can consume large
amounts of network bandwidth and other system
resources.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="cmRepoUrl" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The Cloudera Manager repository URL to use (optional).
Example for SLES, Redhat or other RPM based distributions:
https://archive.cloudera.com/cm5/redhat/5/x86_64/cm/5/
Example for Ubuntu or other Debian based distributions:
"deb https://archive.cloudera.com/cm5/ubuntu/lucid/amd64/cm lucid-cm5 contrib"]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="gpgKeyCustomUrl" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The Cloudera Manager public GPG key (optional).
Example for SLES, Redhat or other RPM based distributions:
https://archive.cloudera.com/cm5/redhat/5/x86_64/cm/RPM-GPG-KEY-cloudera
Example for Ubuntu or other Debian based distributions:
https://archive.cloudera.com/cm5/ubuntu/lucid/amd64/cm/archive.key]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="javaInstallStrategy" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Added in v8: Strategy to use for JDK installation. Valid values are
1. AUTO (default): Cloudera Manager will install the JDK versions that are
required when the "AUTO" option is selected.
Cloudera Manager may overwrite any of the existing JDK installations.
2. NONE: Cloudera Manager will not install any JDK when "NONE" option is selected.
It should be used if an existing JDK installation has to be used.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="unlimitedJCE" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Added in v8: Flag for unlimited strength JCE policy files installation
If unset, defaults to false]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiHostList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of ApiHost objects]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="hosts" type="apiHost" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiHostNameList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of host names.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="hostNames" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiHostRef">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A reference to a host.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="hostId" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The unique host ID.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiHostRefList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of host references.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="hosts" type="apiHostRef" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiHostTemplate">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A host template belongs to a cluster and contains a set of role config
groups for slave roles (such as DataNodes and TaskTrackers) from services
in the cluster. At most one role config group per role type can be present
in a host template. Host templates can be applied to fresh hosts (those with
no roles on them) in order to create a role for each of the role groups on
each host.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The name of the host template. Unique across clusters.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="clusterRef" type="apiClusterRef" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. A reference to the cluster the host template belongs to.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="roleConfigGroupRefs" type="apiRoleConfigGroupRef" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The role config groups belonging to this host tempalte.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiHostTemplateList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of host templates.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="hostTemplates" type="apiHostTemplate" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiImpalaCancelResponse">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[The response from an Impala cancel query response.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="warning" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The warning response. If there was no warning this will be null.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiImpalaQuery">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Represents an Impala Query.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="queryId" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The query id.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="statement" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The SQL statement for the query.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="queryType" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The query type. The possible values are: DML, DDL, QUERY and UNKNOWN.
See the Impala documentation for more details.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="queryState" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The query state. The possible values are: CREATED, INITIALIZED, COMPILED,
RUNNING, FINISHED, EXCEPTION, and UNKNOWN.
See the Impala documentation for more details.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="startTime" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The time the query was issued.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="endTime" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The time the query finished. If the query hasn't finished then this
will return null.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rowsProduced" type="xs:long" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The number of rows produced by the query. If the query hasn't completed
this will return null.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="attributes" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[A map of additional query attributes which is generated by Cloudera Manager.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="key" minOccurs="1" type="xs:string"/>
                  <xs:element name="value" minOccurs="1" type="xs:string"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="user" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The user who issued this query.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="coordinator" type="apiHostRef" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The host of the Impala Daemon coordinating the query]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="detailsAvailable" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether we have a detailed runtime profile available for the query.
This profile is available at the endpoint /queries/{QUERY_ID}.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="database" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The database on which this query was issued.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiImpalaQueryAttribute">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Metadata about an Impala query attribute.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The name of the attribute. This name can be used in filters, for example
'user' could be used in the filter 'user = root'.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="type" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The type of the attribute. Valid types are STRING, NUMBER, BOOLEAN, BYTES,
MILLISECONDS, BYTES_PER_SECOND, BYTE_SECONDS.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="displayName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The display name for the attribute.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="supportsHistograms" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether the Service Monitor can generate a histogram of the distribution
of the attribute across queries.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The description of the attribute.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiImpalaQueryAttributeList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[The list of all the attributes that are applicable to Impala queries.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="attributes" type="apiImpalaQueryAttribute" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiImpalaQueryDetailsResponse">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A query details response.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="details" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The details for this query. Two formats are supported:
<ul>
<li>
'text': this is a text based, human readable representation of the
Impala runtime profile.
</li>
<li>
'thrift_encoded': this a compact-thrift, base64 encoded representation
of the impala RuntimeProfile.thrift object. See the Impala documentation
for more details.
</li>
</ul>]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiImpalaQueryResponse">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[The response contains a list of queries and warnings.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="queries" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The list of queries for this response.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="queries" type="apiImpalaQuery" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[The list of queries for this response.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="warnings" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[This list of warnings for this response.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="warnings" type="xs:string" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[This list of warnings for this response.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiImpalaTenantUtilization">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Utilization report information of a tenant of Impala application.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="tenantName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the tenant.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="totalQueries" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Total number of queries submitted to Impala.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="successfulQueries" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of queries that finished successfully.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="oomQueries" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of queries that failed due to insufficient memory.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="timeOutQueries" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of queries that timed out while waiting for resources in a pool.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rejectedQueries" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of queries that were rejected by Impala because the pool was full.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgWaitTimeInQueue" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average time, in milliseconds, spent by a query in an Impala pool while waiting for resources.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="peakAllocationTimestampMS" type="xs:long" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The time when Impala reserved the maximum amount of memory for queries.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maxAllocatedMemory" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The maximum memory (in bytes) that was reserved by Impala for executing queries.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maxAllocatedMemoryPercentage" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The maximum percentage of memory that was reserved by Impala for executing queries.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="utilizedAtMaxAllocated" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The amount of memory (in bytes) used by Impala for running queries at the
time when maximum memory was reserved.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="utilizedAtMaxAllocatedPercentage" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The percentage of memory used by Impala for running queries at the
time when maximum memory was reserved.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="peakUsageTimestampMS" type="xs:long" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The time when Impala used the maximum amount of memory for queries.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maxUtilizedMemory" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The maximum memory (in bytes) that was used by Impala for executing queries.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maxUtilizedMemoryPercentage" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The maximum percentage of memory that was used by Impala for executing queries.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="allocatedAtMaxUtilized" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The amount of memory (in bytes) reserved by Impala at the time when it was using the
maximum memory for executing queries.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="allocatedAtMaxUtilizedPercentage" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The percentage of memory reserved by Impala at the time when it was using the
maximum memory for executing queries.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="distributionUtilizedByImpalaDaemon" type="apiImpalaUtilizationHistogram" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Distribution of memory used per Impala daemon for executing queries at
the time Impala used the maximum memory.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="distributionAllocatedByImpalaDaemon" type="apiImpalaUtilizationHistogram" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Distribution of memory reserved per Impala daemon for executing queries at
the time Impala used the maximum memory.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgSpilledMemory" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average spill per query.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maxSpilledMemory" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Maximum spill per query.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiImpalaTenantUtilizationList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of impala tenant utilization reports.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="impalaTenantUtilizations" type="apiImpalaTenantUtilization" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiImpalaUDF">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[An impala UDF identifier.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="database" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the database to which this UDF belongs.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="signature" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[UDF signature, includes the UDF name and parameter types.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiImpalaUtilization">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Utilization report information of a Impala application service.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="totalQueries" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Total number of queries submitted to Impala.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="successfulQueries" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of queries that finished successfully.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="oomQueries" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of queries that failed due to insufficient memory.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="timeOutQueries" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of queries that timed out while waiting for resources in a pool.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rejectedQueries" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of queries that were rejected by Impala because the pool was full.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="successfulQueriesPercentage" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Percentage of queries that finished successfully.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="oomQueriesPercentage" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Percentage of queries that failed due to insufficient memory.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="timeOutQueriesPercentage" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Percentage of queries that timed out while waiting for resources in a pool.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rejectedQueriesPercentage" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Percentage of queries that were rejected by Impala because the pool was full.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgWaitTimeInQueue" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average time, in milliseconds, spent by a query in an Impala pool while waiting for resources.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="peakAllocationTimestampMS" type="xs:long" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The time when Impala reserved the maximum amount of memory for queries.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maxAllocatedMemory" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The maximum memory (in bytes) that was reserved by Impala for executing queries.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maxAllocatedMemoryPercentage" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The maximum percentage of memory that was reserved by Impala for executing queries.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="utilizedAtMaxAllocated" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The amount of memory (in bytes) used by Impala for running queries at the
time when maximum memory was reserved.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="utilizedAtMaxAllocatedPercentage" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The percentage of memory used by Impala for running queries at the
time when maximum memory was reserved.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="peakUsageTimestampMS" type="xs:long" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The time when Impala used the maximum amount of memory for queries.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maxUtilizedMemory" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The maximum memory (in bytes) that was used by Impala for executing queries.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maxUtilizedMemoryPercentage" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The maximum percentage of memory that was used by Impala for executing queries.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="allocatedAtMaxUtilized" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The amount of memory (in bytes) reserved by Impala at the time when it was using the
maximum memory for executing queries.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="allocatedAtMaxUtilizedPercentage" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The percentage of memory reserved by Impala at the time when it was using the
maximum memory for executing queries.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="distributionUtilizedByImpalaDaemon" type="apiImpalaUtilizationHistogram" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Distribution of memory used per Impala daemon for executing queries at
the time Impala used the maximum memory.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="distributionAllocatedByImpalaDaemon" type="apiImpalaUtilizationHistogram" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Distribution of memory reserved per Impala daemon for executing queries at
the time Impala used the maximum memory.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="tenantUtilizations" type="apiImpalaTenantUtilizationList" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[A list of tenant utilization reports.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="errorMessage" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[error message of utilization report.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiImpalaUtilizationHistogram">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Histogram of Impala utilization.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="bins" type="apiImpalaUtilizationHistogramBinList" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Bins of the histogram.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiImpalaUtilizationHistogramBin">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Histogram bin of Impala utilization.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="startPointInclusive" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[start point (inclusive) of the histogram bin.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="endPointExclusive" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[end point (exclusive) of the histogram bin.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="numberOfImpalaDaemons" type="xs:long" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of Impala daemons.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiImpalaUtilizationHistogramBinList">
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="impalaTenantUtilizations" type="apiImpalaUtilizationHistogramBin" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiJournalNodeArguments">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Arguments used as part of ApiEnableNnHaArguments to
specify JournalNodes.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="jnName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of new JournalNode to be created. (Optional)]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="jnHostId" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[ID of the host where the new JournalNode will be created.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="jnEditsDir" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Path to the JournalNode edits directory. Need not be specified
if it is already set at RoleConfigGroup level.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiKerberosInfo">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Kerberos information of a Cluster or Cloudera Manager.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="kerberized" type="xs:boolean" minOccurs="1"/>
      <xs:element name="kdcType" type="xs:string" minOccurs="0"/>
      <xs:element name="kerberosRealm" type="xs:string" minOccurs="0"/>
      <xs:element name="kdcHost" type="xs:string" minOccurs="0"/>
      <xs:element name="adminHost" type="xs:string" minOccurs="0"/>
      <xs:element name="domain" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiLicense">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Information about the Cloudera Manager license.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="owner" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The owner (organization name) of the license.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="uuid" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[A UUID of this license.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="expiration" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The expiration date.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiLicensedFeatureUsage">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Information about the number of nodes using which product features.
<p>
Usage information is provided for individual clusters, as well as totals
across all clusters.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="totals" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Map from named features to the total number of nodes using those features.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="key" minOccurs="1" type="xs:string"/>
                  <xs:element name="value" minOccurs="1" type="xs:int"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="clusters" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Map from clusters to maps of named features to the number of nodes in the
cluster using those features.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="key" minOccurs="1" type="xs:string"/>
                  <xs:element name="value" minOccurs="1">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="key" minOccurs="1" type="xs:string"/>
                              <xs:element name="value" minOccurs="1" type="xs:int"/>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiListBase" abstract="true">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A generic list.]]>
      </xs:documentation>
    </xs:annotation>
  </xs:complexType>
  <xs:complexType name="apiMetric">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A metric represents a specific metric monitored by the Cloudera Management
Services, and a list of values matching a user query.
<p>
These fields are available only in the "full" view:
<ul>
<li>displayName</li>
<li>description</li>
</ul>]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the metric.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="context" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Context the metric is associated with.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="unit" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Unit of the metric values.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="data" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[List of readings retrieved from the monitors.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="data" type="apiMetricData" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[List of readings retrieved from the monitors.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="displayName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Requires "full" view. User-friendly display name for the metric.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Requires "full" view. Description of the metric.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiMetricData">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A single data point of metric data.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="timestamp" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[When the metric reading was collected.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="value" type="xs:double" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The value of the metric.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiMetricList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of ApiMetric objects]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="metrics" type="apiMetric" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiMetricSchema">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A metric schema represents the schema for a specific metric monitored by
the Cloudera Management Services.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the metric.
This name is guaranteed to be unique among the metrics.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="displayName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Display name of the metric.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Description of the metric.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="isCounter" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Is the metric a counter.
A counter tracks the total count since a process / host started.
The rate of change of a counter may often be more interesting than
the raw value of a counter.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="unitNumerator" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Numerator for the unit of the metric.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="unitDenominator" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Denominator for the unit of the metric.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="aliases" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Aliases for the metric.
An alias is unique per metric (per source and version) but
is not globally unique. Aliases usually refer to previous
names for the metric as metrics are renamed or replaced.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sources" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Sources for the metric.
Each source entry contains the name of the source
and a list of versions for which this source is valid]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="key" minOccurs="1" type="xs:string"/>
                  <xs:element name="value" minOccurs="1" type="xs:string"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiMetricSchemaList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of ApiMetricSchema objects]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="schemas" type="apiMetricSchema" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiMigrateRolesArguments">
    <xs:sequence>
      <xs:element name="roleNamesToMigrate" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The list of role names to migrate.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="destinationHostId" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The ID of the host to which the roles should be migrated.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="clearStaleRoleData" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Delete existing stale role data, if any. For example, when migrating
a NameNode, if the destination host has stale data in the NameNode data
directories (possibly because a NameNode role was previously located
there), this stale data will be deleted before migrating the role.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiMr2AppInformation">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Represents MapReduce2 information for a YARN application.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="jobState" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The state of the job. This is only set on completed jobs. This can
take on the following values: "NEW", "INITED", "RUNNING", "SUCCEEDED",
"FAILED", "KILLED", "ERROR".]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiMrUsageReport">
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                <![CDATA[A list of per-user usage information at the requested time
granularity.]]>
              </xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element name="reportRows" type="apiMrUsageReportRow" minOccurs="0" maxOccurs="unbounded">
                  <xs:annotation>
                    <xs:documentation>
                      <![CDATA[A list of per-user usage information at the requested time
granularity.]]>
                    </xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiMrUsageReportRow">
    <xs:sequence>
      <xs:element name="timePeriod" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The time period over which this report is generated.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="user" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The user being reported.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="group" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The group this user belongs to.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiNameservice">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Provides information about an HDFS nameservice.
<p>
Nameservices can be either a stand-alone NameNode, a NameNode paired with
a SecondaryNameNode, or a high-availability pair formed by an active and
a stand-by NameNode.
<p>
The following fields are only available in the object's full view:
<ul>
<li>healthSummary</li>
<li>healthChecks</li>
</ul>]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the nameservice.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="active" type="apiRoleRef" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Reference to the active NameNode.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="activeFailoverController" type="apiRoleRef" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Reference to the active NameNode's failover controller, if configured.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="standBy" type="apiRoleRef" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Reference to the stand-by NameNode.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="standByFailoverController" type="apiRoleRef" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Reference to the stand-by NameNode's failover controller, if configured.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="secondary" type="apiRoleRef" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Reference to the SecondaryNameNode.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="mountPoints" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Mount points assigned to this nameservice in a federation.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="mountPoints" type="xs:string" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[Mount points assigned to this nameservice in a federation.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="healthSummary" type="apiHealthSummary" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Requires "full" view. The high-level health status of this nameservice.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="healthChecks" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Requires "full" view. List of health checks performed on the nameservice.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="healthChecks" type="apiHealthCheck" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[Requires "full" view. List of health checks performed on the nameservice.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiNameserviceList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of HDFS nameservices.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="nameservices" type="apiNameservice" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiParcel">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A Parcel encapsulate a specific product and version. For example,
(CDH 4.1). A parcel is downloaded, distributed to all the machines of a
cluster and then allowed to be activated.
<p>>
The available parcels are determined by which cluster they will be running on.
For example, a SLES parcel won't show up for a RHEL cluster.
</p>]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="product" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The name of the product, e.g. CDH, Impala]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="version" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The version of the product, e.g. 1.1.0, 2.3.0.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="stage" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Returns the current stage of the parcel.
<p>
There are a number of stages a parcel can be in. There are two types of
stages - stable and transient. A parcel is in a transient stage when it is
transitioning between two stable stages. The stages are listed below with
some additional information.
<ul>
<li><b>AVAILABLE_REMOTELY</b>: Stable stage - the parcel can be
downloaded to the server.</li>
<li><b>DOWNLOADING</b>: Transient stage - the parcel is in the process of being
downloaded to the server.</li>
<li><b>DOWNLOADED</b>: Stable stage - the parcel is downloaded and
ready to be distributed or removed from the server.</li>
<li><b>DISTRIBUTING</b>: Transient stage - the parcel is being sent to all
the hosts in the cluster.</li>
<li><b>DISTRIBUTED</b>: Stable stage - the parcel is on all the hosts in
the cluster. The parcel can now be activated, or removed from all the hosts.</li>
<li><b>UNDISTRIBUTING</b>: Transient stage - the parcel is being removed
from all the hosts in the cluster></li>
<li><b>ACTIVATING</b>: Transient stage - the parcel is being activated on
the hosts in the cluster. <i>New in API v7</i></li>
<li><b>ACTIVATED</b>: Steady stage - the parcel is set to active on every host
in the cluster. If desired, a parcel can be deactivated from this stage.</li>
</ul>]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="state" type="apiParcelState" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The state of the parcel. This shows the progress of state transitions
and if there were any errors.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="clusterRef" type="apiClusterRef" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. A reference to the enclosing cluster.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiParcelList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of ApiParcel.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="parcels" type="apiParcel" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiParcelRef">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A parcelRef references a parcel. Each parcel is identified by its "parcelName"
and "parcelVersion", and the "clusterName" of the cluster that is using it.
To operate on the parcel object, use the API with the those fields as
parameters.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="clusterName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The name of the cluster that the parcel is used by.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="parcelName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The name of the parcel.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="parcelVersion" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The version of the parcel.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiParcelState">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[The ApiParcelState encapsulates the state of a parcel while it is in
transition and reports any errors that may have occurred..
<p>
The complete progress of a parcel is broken up into two different reporting
indicators - progress and count. Progress is the primary indicator that reports
the global state of transitions. For example, when downloading,
progress and totalProgress will show the current number of bytes downloaded
and the total number of bytes needed to be downloaded respectively.
</p>
<p>
The count and totalCount indicator is used when a state transition affects
multiple hosts. The count and totalCount show the current number of hosts
completed and the total number of hosts respectively. For example, during distribution,
the progress and totalProgress will show how many bytes have been transferred
to each host and the count will indicate how many hosts of of totalCount
have had parcels unpacked.
</p>
<p>
Along with the two progress indicators, the ApiParcelState shows both errors
and warnings that may have turned up during a state transition.
</p>]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="progress" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The progress of the state transition.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="totalProgress" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The total amount that #getProgress() needs to get to.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="count" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The current hosts that have completed.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="totalCount" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The total amount that #getCount() needs to get to.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="errors" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The errors that exist for this parcel.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="errors" type="xs:string" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[The errors that exist for this parcel.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="warnings" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The warnings that exist for this parcel.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="warnings" type="xs:string" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[The warnings that exist for this parcel.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiParcelUsage">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[This object provides a complete view of the usage of parcels in a given
cluster - particularly which parcels are in use for which roles.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="racks" type="apiParcelUsageRack" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The racks that contain hosts that are part of this cluster.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="parcels" type="apiParcelUsageParcel" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The parcel's that are activated and/or in-use on this cluster.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiParcelUsageHost">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[This object is used to represent a host within an ApiParcelUsage.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="hostRef" type="apiHostRef" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[A reference to the corresponding Host object.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="roles" type="apiParcelUsageRole" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[A collection of the roles present on the host.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiParcelUsageParcel">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[This object is used to represent a parcel within an ApiParcelUsage.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="parcelRef" type="apiParcelRef" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Reference to the corresponding Parcel object.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="processCount" type="xs:int" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[How many running processes on the cluster are using the parcel.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="activated" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Is this parcel currently activated on the cluster.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiParcelUsageRack">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[This object is used to represent a rack within an ApiParcelUsage.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="hosts" type="apiParcelUsageHost" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[A collection of the hosts in the rack.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rackId" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The rack ID for the rack.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiParcelUsageRole">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[This object is used to represent a role within an ApiParcelUsage.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="roleRef" type="apiRoleRef" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[A reference to the corresponding Role object.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="parcelRefs" type="apiParcelRef" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[A collection of references to the parcels being used by the role.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiPrincipalList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of kerberos principals.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="principals" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiProcess">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A process represents a unix process to be managed by the Cloudera
Manager agents. A process can be a daemon, e.g. if it is associated
with a running role. It can also be a one-off process which is expected
to start, run and finish.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="configFiles" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[List of config files supplied to the process.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiProductVersion">
    <xs:sequence>
      <xs:element name="version" type="xs:string" minOccurs="0"/>
      <xs:element name="product" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiReplicationCommand">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Information about a replication command.
<p/>
This object holds all the information a regular ApiCommand object provides,
and adds specific information about the results of a replication command.
<p/>
Depending on the type of the service where the replication was run, a
different result property will be populated.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiCommand">
        <xs:sequence>
          <xs:element name="hdfsResult" type="apiHdfsReplicationResult" minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                <![CDATA[Results for replication commands on HDFS services.]]>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="hiveResult" type="apiHiveReplicationResult" minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                <![CDATA[Results for replication commands on Hive services.]]>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiReplicationCommandList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of replication commands.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="commands" type="apiReplicationCommand" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiReplicationDiagnosticsCollectionArgs">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Optional arguments for diagnostics collection.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="commands" type="apiCommandList" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Commands to limit diagnostics to.
By default, the most recent 10 commands on the schedule will be used.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ticketNumber" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Ticket number to which this bundle must be associated with.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comments" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Additional comments for the bundle.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="phoneHome" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether the diagnostics bundle must be uploaded to Cloudera.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiReplicationSchedule">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A replication job schedule.
<p/>
Replication jobs have service-specific arguments. This object has methods
to retrieve arguments for all supported types of replication, but only
one argument type is allowed to be set; the backend will check that the
provided argument matches the service type where the replication is
being scheduled.
<p/>
The replication job's arguments should match the underlying service. Refer
to each property's documentation to find out which properties correspond to
which services.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiSchedule">
        <xs:sequence>
          <xs:element name="hdfsArguments" type="apiHdfsReplicationArguments" minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                <![CDATA[Arguments for HDFS replication commands.]]>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="hiveArguments" type="apiHiveReplicationArguments" minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                <![CDATA[Arguments for Hive replication commands.]]>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="hdfsCloudArguments" type="apiHdfsCloudReplicationArguments" minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                <![CDATA[Arguments for HDFS cloud replication commands.]]>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="history" minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                <![CDATA[List of active and/or finished commands for this schedule.]]>
              </xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element name="history" type="apiReplicationCommand" minOccurs="0" maxOccurs="unbounded">
                  <xs:annotation>
                    <xs:documentation>
                      <![CDATA[List of active and/or finished commands for this schedule.]]>
                    </xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="hiveCloudArguments" type="apiHiveCloudReplicationArguments" minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                <![CDATA[Arguments for Hive cloud replication commands.]]>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiReplicationScheduleList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of replication schedules.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="schedules" type="apiReplicationSchedule" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiRestartClusterArgs">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Arguments used for Cluster Restart command.
Since V11:
If both restartOnlyStaleServices and restartServiceNames are specified,
a service must be specified in restartServiceNames and also be stale,
in order to be restarted.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="restartOnlyStaleServices" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Only restart services that have stale configuration and their dependent
services.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="redeployClientConfiguration" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Re-deploy client configuration for all services in the cluster.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="restartServiceNames" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Only restart services that are specified and their dependent services.
Available since V11.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiRole">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A role represents a specific entity that participate in a service. Examples
are JobTrackers, DataNodes, HBase Masters. Each role is assigned a host
where it runs on.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The name of the role.
Optional when creating a role since API v6. If not specified, a name will
be automatically generated for the role.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="type" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The type of the role, e.g. NAMENODE, DATANODE, TASKTRACKER.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="hostRef" type="apiHostRef" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[A reference to the host where this role runs.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="serviceRef" type="apiServiceRef" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. A reference to the parent service.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="roleState" type="apiRoleState" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. The configured run state of this role. Whether it's running, etc.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="commissionState" type="apiCommissionState" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. The commission state of this role.
Available since API v2.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="healthSummary" type="apiHealthSummary" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. The high-level health status of this role.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="configStale" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. Expresses whether the role configuration is stale.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="configStalenessStatus" type="apiConfigStalenessStatus" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. Expresses the role's configuration staleness status.
Available since API v6.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="healthChecks" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. The list of health checks of this service.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="healthChecks" type="apiHealthCheck" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[Readonly. The list of health checks of this service.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="haStatus" type="haStatus" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. The HA status of this role.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="roleUrl" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly.
Link into the Cloudera Manager web UI for this specific role.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maintenanceMode" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. Whether the role is in maintenance mode.
Available since API v2.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maintenanceOwners" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. The list of objects that trigger this role to be in
maintenance mode.
Available since API v2.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="maintenanceOwners" type="apiEntityType" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[Readonly. The list of objects that trigger this role to be in
maintenance mode.
Available since API v2.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="config" type="apiConfigList" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The role configuration. Optional.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="roleConfigGroupRef" type="apiRoleConfigGroupRef" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. The reference to the role configuration group of this role.
Available since API v3.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="zooKeeperServerMode" type="zooKeeperServerMode" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. The ZooKeeper server mode for this role. Note that for
non-ZooKeeper Server roles this will be null.
Available since API v6.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="entityStatus" type="apiEntityStatus" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. The entity status for this role.
Available since API v11.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="haStatus">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ACTIVE"/>
      <xs:enumeration value="STANDBY"/>
      <xs:enumeration value="UNKNOWN"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="zooKeeperServerMode">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[The state of the Zookeeper server.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="STANDALONE"/>
      <xs:enumeration value="REPLICATED_FOLLOWER"/>
      <xs:enumeration value="REPLICATED_LEADER"/>
      <xs:enumeration value="REPLICATED_LEADER_ELECTION"/>
      <xs:enumeration value="REPLICATED_OBSERVER"/>
      <xs:enumeration value="UNKNOWN"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="apiRoleConfigGroup">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A role config group contains roles of the same role type
sharing the same configuration. While each role has to belong
to a group, a role config group may be empty.
There exists a default role config group for each role type.
Default groups cannot be removed nor created.
The name of a role config group is unique and cannot be changed.
The configuration of individual roles may be overridden on
role level.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. The unique name of this role config group.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="roleType" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. The type of the roles in this group.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="base" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. Indicates whether this is a base group.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="config" type="apiConfigList" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The configuration for this group. Optional.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="displayName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The display name of this group.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="serviceRef" type="apiServiceRef" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. The service reference (service name and cluster name)
of this group.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiRoleConfigGroupList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of role config groups.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="groups" type="apiRoleConfigGroup" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiRoleConfigGroupRef">
    <xs:sequence>
      <xs:element name="roleConfigGroupName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The name of the role config group, which uniquely identifies it in a CM
installation.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiRoleList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of roles.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="roles" type="apiRole" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiRoleNameList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of role names.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="roleNames" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiRoleRef">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A roleRef references a role. Each role is identified by its "roleName",
the "serviceName" for the service it belongs to, and the "clusterName" in
which the service resides. To operate on the role object,
use the API with the those fields as parameters.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="clusterName" type="xs:string" minOccurs="0"/>
      <xs:element name="serviceName" type="xs:string" minOccurs="0"/>
      <xs:element name="roleName" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="apiRoleState">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Represents the configured run state of a role.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="HISTORY_NOT_AVAILABLE"/>
      <xs:enumeration value="UNKNOWN"/>
      <xs:enumeration value="STARTING"/>
      <xs:enumeration value="STARTED"/>
      <xs:enumeration value="BUSY"/>
      <xs:enumeration value="STOPPING"/>
      <xs:enumeration value="STOPPED"/>
      <xs:enumeration value="NA"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="apiRoleTypeConfig">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Role type configuration information.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiConfigList">
        <xs:sequence>
          <xs:element name="roleType" type="xs:string" minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                <![CDATA[The role type.]]>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiRoleTypeList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of roles types that exists for a given service.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="typeNames" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="apiRolesToInclude">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Roles to include during a cluster rolling restart.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="SLAVES_ONLY"/>
      <xs:enumeration value="NON_SLAVES_ONLY"/>
      <xs:enumeration value="ALL_ROLES"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="apiRollEditsArgs">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Arguments used for the Roll Edits command.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="nameservice" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Nameservice whose edits need to be rolled.
Required only if HDFS service is federated.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiRollingRestartArgs">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Arguments used for Rolling Restart commands.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="restartRoleTypes" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Role types to restart. If not specified, all startable roles are restarted.
Both role types and role names should not be specified.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="restartRoleNames" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[List of specific roles to restart.
If none are specified, then all roles of specified role types are restarted.
Both role types and role names should not be specified.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiRollingRestartClusterArgs">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Arguments used for Rolling Restart Cluster command.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="slaveBatchSize" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of hosts with slave roles to restart at a time.
Must be greater than zero. Default is 1.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sleepSeconds" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of seconds to sleep between restarts of slave host batches.
<p>
Must be greater than or equal to 0. Default is 0.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="slaveFailCountThreshold" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The threshold for number of slave host batches that are allowed to fail
to restart before the entire command is considered failed.
<p>
Must be greater than or equal to 0. Default is 0.
<p>
This argument is for ADVANCED users only.
</p>]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="staleConfigsOnly" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Restart roles with stale configs only.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="unUpgradedOnly" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Restart roles that haven't been upgraded yet.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="redeployClientConfiguration" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Re-deploy client configuration. Available since API v6.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rolesToInclude" type="apiRolesToInclude" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Role types to restart. Default is slave roles only.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="restartServiceNames" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[List of services to restart.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiRollingUpgradeClusterArgs">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Rolling upgrade arguments used in the CDH Upgrade Command. Part of
ApiCdhUpgradeArgs.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="slaveBatchSize" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of slave roles to restart at a time.
Must be greater than zero. Default is 1.
Please note that for HDFS, this number should be less than
the replication factor (default 3) to ensure data availability
during rolling restart.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sleepSeconds" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of seconds to sleep between restarts of slave role batches.
Must be greater than or equal to 0. Default is 0.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="slaveFailCountThreshold" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The threshold for number of slave batches that are allowed to fail
to restart before the entire command is considered failed.
Must be greather than or equal to 0. Default is 0.
<p>
This argument is for ADVANCED users only.
</p>]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiRollingUpgradeServicesArgs">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Arguments used for Rolling Upgrade command.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="upgradeFromCdhVersion" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Current CDH Version of the services. Example versions are:
"5.1.0", "5.2.2" or "5.4.0"]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="upgradeToCdhVersion" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Target CDH Version for the services. The CDH version should already
be present and activated on the nodes. Example versions are:
"5.1.0", "5.2.2" or "5.4.0"]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="slaveBatchSize" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of hosts with slave roles to upgrade at a time.
Must be greater than zero. Default is 1.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sleepSeconds" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of seconds to sleep between restarts of slave host batches.
Must be greater than or equal to 0. Default is 0.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="slaveFailCountThreshold" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The threshold for number of slave host batches that are allowed to fail
to restart before the entire command is considered failed.
Must be greater than or equal to 0. Default is 0.
<p>
This argument is for ADVANCED users only.
</p>]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="upgradeServiceNames" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[List of services to upgrade.
Only the services that support rolling upgrade should be included.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiSchedule" abstract="true">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Base class for commands that can be scheduled in Cloudera Manager.
<p/>
Note that schedule IDs are not preserved upon import.
<p/>]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The schedule id.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="displayName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The schedule display name.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The schedule description.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="startTime" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The time at which the scheduled activity is triggered for the first
time.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="endTime" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The time after which the scheduled activity will no longer be triggered.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="interval" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The duration between consecutive triggers of a scheduled activity.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="intervalUnit" type="apiScheduleInterval" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The unit for the repeat interval.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nextRun" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. The time the scheduled command will run next.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="paused" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The paused state for the schedule. The scheduled activity will not be
triggered as long as the scheduled is paused.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="alertOnStart" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether to alert on start of the scheduled activity.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="alertOnSuccess" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether to alert on successful completion of the scheduled activity.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="alertOnFail" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether to alert on failure of the scheduled activity.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="alertOnAbort" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether to alert on abort of the scheduled activity.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="apiScheduleInterval">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Represents the unit for the repeat interval for schedules.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="MINUTE"/>
      <xs:enumeration value="HOUR"/>
      <xs:enumeration value="DAY"/>
      <xs:enumeration value="WEEK"/>
      <xs:enumeration value="MONTH"/>
      <xs:enumeration value="YEAR"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="apiScmDbInfo">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Cloudera Manager server's database information]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="scmDbType" type="scmDbType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Cloudera Manager server's db type]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="embeddedDbUsed" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether Cloudera Manager server is using embedded DB]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="scmDbType">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Enum for Cloudera Manager DB type.
Note that DERBY and SQLITE3 are not supported DBs]]>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="MYSQL"/>
      <xs:enumeration value="POSTGRESQL"/>
      <xs:enumeration value="HSQL"/>
      <xs:enumeration value="ORACLE"/>
      <xs:enumeration value="DERBY"/>
      <xs:enumeration value="SQLITE3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="apiService">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A service (such as HDFS, MapReduce, HBase) runs in a cluster. It has roles,
which are the actual entities (NameNode, DataNodes, etc.) that perform the
service's functions.
<h3>HDFS services and health checks</h3>
In CDH4, HDFS services may not present any health checks. This will happen
if the service has more than one nameservice configured. In those cases,
the health information will be available by fetching information about the
nameservices instead.
<p>
The health summary is still available, and reflects a service-wide summary.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The name of the service.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="type" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The type of the service, e.g. HDFS, MAPREDUCE, HBASE.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="clusterRef" type="apiClusterRef" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. A reference to the enclosing cluster.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="serviceState" type="apiServiceState" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. The configured run state of this service.
Whether it's running, etc.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="healthSummary" type="apiHealthSummary" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. The high-level health status of this service.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="configStale" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. Expresses whether the service configuration is stale.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="configStalenessStatus" type="apiConfigStalenessStatus" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. Expresses the service's configuration staleness status which is
based on the staleness status of its roles.
Available since API v6.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="clientConfigStalenessStatus" type="apiConfigStalenessStatus" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. Expresses the service's client configuration staleness status
which is marked as stale if any of the service's hosts have missing client
configurations or if any of the deployed client configurations are stale.
Available since API v6.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="healthChecks" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. The list of health checks of this service.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="healthChecks" type="apiHealthCheck" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[Readonly. The list of health checks of this service.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="serviceUrl" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. Link into the Cloudera Manager web UI for this specific service.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="roleInstancesUrl" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. Link into the Cloudera Manager web UI for role instances table for
this specific service.
Available since API v11.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maintenanceMode" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. Whether the service is in maintenance mode.
Available since API v2.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maintenanceOwners" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. The list of objects that trigger this service to be in
maintenance mode.
Available since API v2.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="maintenanceOwners" type="apiEntityType" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[Readonly. The list of objects that trigger this service to be in
maintenance mode.
Available since API v2.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="config" type="apiServiceConfig" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Configuration of the service being created. Optional.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="roles" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The list of service roles. Optional.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="roles" type="apiRole" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[The list of service roles. Optional.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="displayName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The display name for the service that is shown in the UI.
Available since API v2.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="roleConfigGroups" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The list of role configuration groups in this service. Optional.
Available since API v3.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="roleConfigGroups" type="apiRoleConfigGroup" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[The list of role configuration groups in this service. Optional.
Available since API v3.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="replicationSchedules" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The list of replication schedules for this service. Optional.
Available since API v6.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="replicationSchedules" type="apiReplicationSchedule" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[The list of replication schedules for this service. Optional.
Available since API v6.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="snapshotPolicies" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The list of snapshot policies for this service. Optional.
Available since API v6.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="snapshotPolicies" type="apiSnapshotPolicy" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[The list of snapshot policies for this service. Optional.
Available since API v6.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="entityStatus" type="apiEntityStatus" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Readonly. The entity status for this service.
Available since API v11.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiServiceConfig">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Service and role type configuration.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiConfigList">
        <xs:sequence>
          <xs:element name="roleTypeConfigs" type="apiRoleTypeConfig" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
              <xs:documentation>
                <![CDATA[List of role type configurations.
Only available up to API v2.]]>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiServiceList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of services.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="services" type="apiService" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiServiceRef">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A serviceRef references a service. It is identified by the "serviceName",
"clusterName" (name of the cluster which the service belongs to) and
an optional "peerName" (to reference a remote service i.e. services managed
by other CM instances). To operate on the service object, use the API with
those fields as parameters.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="peerName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The name of the CM peer corresponding to the remote CM that manages the
referenced service. This should only be set when referencing a remote
service.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="clusterName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The enclosing cluster for this service.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="serviceName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The service name.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="apiServiceState">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Represents the configured run state of a service.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="HISTORY_NOT_AVAILABLE"/>
      <xs:enumeration value="UNKNOWN"/>
      <xs:enumeration value="STARTING"/>
      <xs:enumeration value="STARTED"/>
      <xs:enumeration value="STOPPING"/>
      <xs:enumeration value="STOPPED"/>
      <xs:enumeration value="NA"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="apiServiceTypeList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of service types that exists for a given cluster.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="typeNames" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiShutdownReadiness">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Cloudera Manager server's shutdown readiness]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="state" type="shutdownReadinessState" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Shutdown readiness state]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="shutdownReadinessState">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Enum for Cloudera Manager shutdown readiness state.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="READY"/>
      <xs:enumeration value="NOT_READY"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="apiSimpleRollingRestartClusterArgs">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Basic arguments used for Rolling Restart Cluster commands.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="slaveBatchSize" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of hosts with slave roles to restart at a time.
Must be greater than zero. Default is 1.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sleepSeconds" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of seconds to sleep between restarts of slave host batches.
<p>
Must be greater than or equal to 0. Default is 0.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="slaveFailCountThreshold" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The threshold for number of slave host batches that are allowed to fail
to restart before the entire command is considered failed.
<p>
Must be greater than or equal to 0. Default is 0.
<p>
This argument is for ADVANCED users only.
</p>]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiSnapshotCommand">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Information about snapshot commands.
<p/>
This object holds all the information a regular ApiCommand object provides,
and adds specific information about the results of a snapshot command.
<p/>
Depending on the type of the service where the snapshot command was run, a
different result property will be populated.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiCommand">
        <xs:sequence>
          <xs:element name="HBaseResult" type="apiHBaseSnapshotResult" minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                <![CDATA[Results for snapshot commands on HBase services.]]>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="hdfsResult" type="apiHdfsSnapshotResult" minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                <![CDATA[Results for snapshot commands on Hdfs services.]]>
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiSnapshotCommandList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of snapshot commands.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="commands" type="apiSnapshotCommand" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiSnapshotPolicy">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A snapshot policy.
<p/>
Snapshot policies have service specific arguments. This object has methods
to retrieve arguments for all supported types of snapshots, but only one
argument type is allowed to be set; the backend will check that the provided
argument matches the type of the service with which the snapshot policy is
associated.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the snapshot policy.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Description of the snapshot policy.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="hourlySnapshots" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of hourly snapshots to be retained.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dailySnapshots" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of daily snapshots to be retained.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="weeklySnapshots" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of weekly snapshots to be retained.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="monthlySnapshots" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of monthly snapshots to be retained.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="yearlySnapshots" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Number of yearly snapshots to be retained.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="minuteOfHour" type="xs:byte" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Minute in the hour that hourly, daily, weekly, monthly and yearly
snapshots should be created. Valid values are 0 to 59. Default value is 0.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="hoursForHourlySnapshots" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Hours of the day that hourly snapshots should be created. Valid values
are 0 to 23. If this list is null or empty, then hourly snapshots are
created for every hour.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="hoursForHourlySnapshots" type="xs:byte" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[Hours of the day that hourly snapshots should be created. Valid values
are 0 to 23. If this list is null or empty, then hourly snapshots are
created for every hour.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="hourOfDay" type="xs:byte" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Hour in the day that daily, weekly, monthly and yearly snapshots should be
created. Valid values are 0 to 23. Default value is 0.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dayOfWeek" type="xs:byte" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Day of the week that weekly snapshots should be created. Valid values are
1 to 7, 1 representing Sunday. Default value is 1.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dayOfMonth" type="xs:byte" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Day of the month that monthly and yearly snapshots should be created.
Values from 1 to 31 are allowed. Additionally 0 to -30 can be used to
specify offsets from the last day of the month. Default value is 1.
<p/>
If this value is invalid for any month for which snapshots are required,
the backend will throw an exception.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="monthOfYear" type="xs:byte" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Month of the year that yearly snapshots should be created. Valid values
are 1 to 12, 1 representing January. Default value is 1.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="alertOnStart" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether to alert on start of snapshot creation/deletion activity.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="alertOnSuccess" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether to alert on successful completion of snapshot creation/deletion
activity.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="alertOnFail" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether to alert on failure of snapshot creation/deletion activity.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="alertOnAbort" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether to alert on abort of snapshot creation/deletion activity.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="HBaseArguments" type="apiHBaseSnapshotPolicyArguments" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Arguments specific to HBase snapshot policies.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="hdfsArguments" type="apiHdfsSnapshotPolicyArguments" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Arguments specific to Hdfs snapshot policies.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="lastCommand" type="apiSnapshotCommand" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Latest command of this policy.
The command might still be active.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="lastSuccessfulCommand" type="apiSnapshotCommand" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Last successful command of this policy.
Returns null if there has been no successful command.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="paused" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether to pause a snapshot policy, available since V11.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiSnapshotPolicyList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of snapshot policies.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="policies" type="apiSnapshotPolicy" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiTenantUtilization">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Utilization report information of a tenant.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="tenantName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the tenant.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="cpuUtilizationPercentage" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Percentage of CPU resource used by workloads.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="memoryUtilizationPercentage" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Percentage of memory used by workloads.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiTenantUtilizationList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of tenant utilization reports.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="tenantUtilizations" type="apiTenantUtilization" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiTimeSeries">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A time series represents a stream of data points.
Each data point contains a time and a value.
Time series are returned by executing a tsquery.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="metadata" type="apiTimeSeriesMetadata" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Metadata for the metric.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="data" type="apiTimeSeriesData" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[List of metric data points.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiTimeSeriesAggregateStatistics">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Statistics related to one time series aggregate data point. It is
available from v6 for data points containing aggregate data. It includes
further statistics about the data point. An aggregate can be across
entities (e.g., fd_open_across_datanodes), over time (e.g., a daily point
for the fd_open metric for a specific DataNode), or both (e.g., a daily
point for the fd_open_across_datanodes metric). If the data point is for
non-aggregate date this will return null.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="sampleTime" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The timestamp of the sample data point. Note that the timestamp
reflects coordinated universal time (UTC) and not necessarily the server's
time zone. The rest API formats the UTC timestamp as an ISO-8061 string.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="sampleValue" type="xs:double" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The sample data point value representing an actual sample value picked
from the underlying data that is being aggregated.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="count" type="xs:long" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The number of individual data points aggregated in this data point.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="min" type="xs:double" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[This minimum value encountered while producing this aggregate data point.
If this is a cross-time aggregate then this is the minimum value
encountered during the aggregation period. If this is a cross-entity
aggregate then this is the minimum value encountered across all entities.
If this is a cross-time, cross-entity aggregate, then this is the minimum
value for any entity across the aggregation period.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="minTime" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The timestamp of the minimum data point. Note that the timestamp
reflects coordinated universal time (UTC) and not necessarily the server's
time zone. The rest API formats the UTC timestamp as an ISO-8061 string.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="max" type="xs:double" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[This maximum value encountered while producing this aggregate data point.
If this is a cross-time aggregate then this is the maximum value
encountered during the aggregation period. If this is a cross-entity
aggregate then this is the maximum value encountered across all entities.
If this is a cross-time, cross-entity aggregate, then this is the maximum
value for any entity across the aggregation period.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maxTime" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The timestamp of the maximum data point. Note that the timestamp
reflects coordinated universal time (UTC) and not necessarily the server's
time zone. The rest API formats the UTC timestamp as an ISO-8061 string.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="mean" type="xs:double" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The mean of the values of all data-points for this aggregate data point.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="stdDev" type="xs:double" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The standard deviation of the values of all data-points for this aggregate
data point.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="crossEntityMetadata" type="apiTimeSeriesCrossEntityMetadata" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[If the data-point is for a cross entity aggregate (e.g.,
fd_open_across_datanodes) returns the cross entity metadata, null otherwise.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiTimeSeriesCrossEntityMetadata">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A class holding additional metadata to the ApiTimeSeriesAggregateStatistics
class that applies specifically to cross-entity aggregate metrics.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="maxEntityDisplayName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The display name of the entity that had the maximum value for the
cross-entity aggregate metric.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maxEntityName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The name of the entity that had the maximum value for the
cross-entity aggregate metric.
<p>
Available since API v11.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="minEntityDisplayName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The display name of the entity that had the minimum value for the
cross-entity aggregate metric.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="minEntityName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The name of the entity that had the minimum value for the
cross-entity aggregate metric.
<p>
Available since API v11.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="numEntities" type="xs:double" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The number of entities covered by this point. For a raw cross-entity point
this number is exact. For a rollup point this number is an average, since
the number of entities being aggregated can change over the aggregation
period.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiTimeSeriesData">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A single data point of time series data.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="timestamp" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The timestamp for this time series data point. Note that the timestamp
reflects coordinated universal time (UTC) and not necessarily the server's
time zone. The rest API formats the UTC timestamp as an ISO-8061 string.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="value" type="xs:double" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The value of the time series data.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="type" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The type of the time series data.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="aggregateStatistics" type="apiTimeSeriesAggregateStatistics" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Available from v6 for data points containing aggregate data. It includes
further statistics about the data point. An aggregate can be across
entities (e.g., fd_open_across_datanodes), over time (e.g., a daily point
for the fd_open metric for a specific DataNode), or both (e.g., a daily
point for the fd_open_across_datanodes metric). If the data point is for
non-aggregate date this will return null.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiTimeSeriesEntityAttribute">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A time series entity attribute represents a possible attribute of a time
series entity type monitored by the Cloudera Management Services.
<p>
Available since API v11.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the of the attribute.
This name uniquely identifies this attribute.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="displayName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Display name of the attribute.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Description of the attribute.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="isValueCaseSensitive" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Returns whether to treat attribute values as case-sensitive.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiTimeSeriesEntityAttributeList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of ApiTimeSeriesEntityAttribute objects]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="metricEntityTypeAttributes" type="apiTimeSeriesEntityAttribute" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiTimeSeriesEntityType">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Describe a time series entity type and attributes associated with
this entity type.
<p>
Available since API v11.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Returns the name of the entity type. This name uniquely identifies this
entity type.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="category" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Returns the category of the entity type.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="nameForCrossEntityAggregateMetrics" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Returns the string to use to pluralize the name of the entity for cross
entity aggregate metrics.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="displayName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Returns the display name of the entity type.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Returns the description of the entity type.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="immutableAttributeNames" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Returns the list of immutable attributes for this entity type. Immutable
attributes values for an entity may not change over its lifetime.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="mutableAttributeNames" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Returns the list of mutable attributes for this entity type. Mutable
attributes for an entity may change over its lifetime.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="entityNameFormat" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Returns a list of attribute names that will be used to construct entity
names for entities of this type. The attributes named here must be immutable
attributes of this type or a parent type.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="entityDisplayNameFormat" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Returns a format string that will be used to construct the display name of
entities of this type. If this returns null the entity name would be used
as the display name.
The entity attribute values are used to replace $attribute name portions of
this format string. For example, an entity with roleType "DATANODE" and
hostname "foo.com" will have a display name "DATANODE (foo.com)" if the
format is "$roleType ($hostname)".]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="parentMetricEntityTypeNames" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Returns a list of metric entity type names which are parents of this
metric entity type. A metric entity type inherits the attributes of
its ancestors. For example a role metric entity type has its service as a
parent. A service metric entity type has a cluster as a parent. The role
type inherits its cluster name attribute through its service parent. Only
parent ancestors should be returned here. In the example given, only the
service metric entity type should be specified in the parent list.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiTimeSeriesEntityTypeList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of ApiTimeSeriesEntityType objects]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="metricEntityTypes" type="apiTimeSeriesEntityType" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiTimeSeriesMetadata">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Metadata for a time series.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="metricName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The metric name for the time series.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="entityName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The display name for the entity associated with this time series.
For example, if this was a time series for an HDFS service the entity name
might be something like "My HDFS Service". If it was for a host it might
be something like "myhost.mysite.com".]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="startTime" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The start time for the time series.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="endTime" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The end time for the time series.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="attributes" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The attributes for the time series. Note that the entityName entry in
this map is not the same as the entityName field in this
ApiTimeSeriesMetadata. The entityName entry in this map is a unique
identifier for the entity and not the name displayed in the UI.
For example, if this was a time series for the YARN Job History Server
the entityName entry in this map might be something like
"yarn-JOBHISTORY-6bd17ceb1489aae93fef4c867350d0dd"]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="key" minOccurs="1" type="xs:string"/>
                  <xs:element name="value" minOccurs="1" type="xs:string"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="unitNumerators" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The numerators of the units for the time series.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="unitDenominators" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The denominators of the units for the time series.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="expression" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The tsquery expression that could be used to extract just this stream.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="alias" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The alias for this stream's metric. Aliases correspond to use of the 'as'
keyword in the tsquery.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="metricCollectionFrequencyMs" type="xs:long" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The minimum frequency at which the underlying metric for this stream is
collected. Note that this can be null if the stream returns irregularly
sampled data.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rollupUsed" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The aggregate rollup for the returned data. This can be TEN_MINUTELY,
HOURLY, SIX_HOURLY, DAILY, or WEEKLY.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiTimeSeriesRequest">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Request object containing information needed for querying timeseries data.
Available since API v11.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="query" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[tsquery to run against the CM time-series data store.
Please see the <a href="http://tiny.cloudera.com/cm_tsquery">
tsquery language documentation</a>.<p/>]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="from" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Start of the period to query in ISO 8601 format (defaults to 5 minutes
before the end of the period).]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="to" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[End of the period to query in ISO 8601 format (defaults to current time).]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="contentType" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[contentType to return the response in. The content types "application/json"
and "text/csv" are supported. This defaults to "application/json". If
"text/csv" is specified then we return one row per time series data point,
and we don't return any of the metadata.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="desiredRollup" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Aggregate rollup level desired for the response data.
Valid values are RAW, TEN_MINUTELY, HOURLY, SIX_HOURLY, DAILY, and WEEKLY.
Note that if the mustUseDesiredRollup parameter is not set, then the
monitoring server can decide to return a different rollup level.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="mustUseDesiredRollup" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[If set to true, then the tsquery will return data with the desired
aggregate rollup level.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiTimeSeriesResponse">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[The time series response for a time series query.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="timeSeries" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The time series data for this single query response.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="timeSeries" type="apiTimeSeries" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[The time series data for this single query response.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="warnings" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The warnings for this single query response.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="warnings" type="xs:string" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[The warnings for this single query response.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="timeSeriesQuery" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The query for this single query response.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiTimeSeriesResponseList">
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:annotation>
              <xs:documentation>
                <![CDATA[The list of responses for this query response list.]]>
              </xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element name="responses" type="apiTimeSeriesResponse" minOccurs="0" maxOccurs="unbounded">
                  <xs:annotation>
                    <xs:documentation>
                      <![CDATA[The list of responses for this query response list.]]>
                    </xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiUser">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[This is the model for user information in the API.
<p>
Note that any method that returns user information will not contain any
password information. The password property is only used when creating
or updating users.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The username, which is unique within a Cloudera Manager installation.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="password" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Returns the user password.
<p>
Passwords are not returned when querying user information, so this
property will always be empty when reading information from a server.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="roles" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[A list of roles this user belongs to.
<p>
In Cloudera Express, possible values are:
<ul>
<li><b>ROLE_ADMIN</b></li>
<li><b>ROLE_USER</b></li>
</ul>
In Cloudera Enterprise Datahub Edition, additional possible values are:
<ul>
<li><b>ROLE_LIMITED</b>: Added in Cloudera Manager 5.0</li>
<li><b>ROLE_OPERATOR</b>: Added in Cloudera Manager 5.1</li>
<li><b>ROLE_CONFIGURATOR</b>: Added in Cloudera Manager 5.1</li>
<li><b>ROLE_CLUSTER_ADMIN</b>: Added in Cloudera Manager 5.2</li>
<li><b>ROLE_BDR_ADMIN</b>: Added in Cloudera Manager 5.2</li>
<li><b>ROLE_NAVIGATOR_ADMIN</b>: Added in Cloudera Manager 5.2</li>
<li><b>ROLE_USER_ADMIN</b>: Added in Cloudera Manager 5.2</li>
<li><b>ROLE_KEY_ADMIN</b>: Added in Cloudera Manager 5.5</li>
</ul>
An empty list implies ROLE_USER.
<p>
Note that although this interface provides a list of roles, a user should
only be assigned a single role at a time.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="roles" type="xs:string" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[A list of roles this user belongs to.
<p>
In Cloudera Express, possible values are:
<ul>
<li><b>ROLE_ADMIN</b></li>
<li><b>ROLE_USER</b></li>
</ul>
In Cloudera Enterprise Datahub Edition, additional possible values are:
<ul>
<li><b>ROLE_LIMITED</b>: Added in Cloudera Manager 5.0</li>
<li><b>ROLE_OPERATOR</b>: Added in Cloudera Manager 5.1</li>
<li><b>ROLE_CONFIGURATOR</b>: Added in Cloudera Manager 5.1</li>
<li><b>ROLE_CLUSTER_ADMIN</b>: Added in Cloudera Manager 5.2</li>
<li><b>ROLE_BDR_ADMIN</b>: Added in Cloudera Manager 5.2</li>
<li><b>ROLE_NAVIGATOR_ADMIN</b>: Added in Cloudera Manager 5.2</li>
<li><b>ROLE_USER_ADMIN</b>: Added in Cloudera Manager 5.2</li>
<li><b>ROLE_KEY_ADMIN</b>: Added in Cloudera Manager 5.5</li>
</ul>
An empty list implies ROLE_USER.
<p>
Note that although this interface provides a list of roles, a user should
only be assigned a single role at a time.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="pwHash" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[NOTE: Only available in the "export" view]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="pwSalt" type="xs:long" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[NOTE: Only available in the "export" view]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="pwLogin" type="xs:boolean" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[NOTE: Only available in the "export" view]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiUserList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of users.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="users" type="apiUser" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiUserSession">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[This is the model for interactive user session information in the API.
<p>
A user may have more than one active session. Each such session will have
its own session object.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The username associated with the session.
<p>
This will be the same value shown to the logged in user in the UI, which
will normally be the same value they typed when logging in, but it is
possible that in certain external authentication scenarios, it will differ
from that value.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="remoteAddr" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The remote IP address for the session.
<p>
This will be the remote IP address for the last request made as part of
this session. It is not guaranteed to be the same IP address as was
previously used, or the address used to initiate the session.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="lastRequest" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The date and time of the last request received as part of this session.
<p>
This will be returned in ISO 8601 format from the REST API.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiUserSessionList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of user sessions.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="userSessions" type="apiUserSession" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiVersionInfo">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Version information of Cloudera Manager itself.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="version" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Version.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="snapshot" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether this build is a development snapshot.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildUser" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The user performing the build.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="buildTimestamp" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Build timestamp.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="gitHash" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Source control management hash.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiWatchedDir">
    <xs:sequence>
      <xs:element name="path" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiWatchedDirList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of watched directories.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="dirs" type="apiWatchedDir" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiYarnApplication">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Represents a Yarn application]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="allocatedMB" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The sum of memory in MB allocated to the application's running containers
Available since v12.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="allocatedVCores" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The sum of virtual cores allocated to the application's running containers
Available since v12.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="runningContainers" type="xs:int" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The number of containers currently running for the application
Available since v12.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="applicationTags" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[List of YARN application tags. Available since v12.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="allocatedMemorySeconds" type="xs:long" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Allocated memory to the application in units of mb-secs.
Available since v12.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="allocatedVcoreSeconds" type="xs:long" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Allocated vcore-secs to the application. Available since v12.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="applicationId" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The application id.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The name of the application.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="startTime" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The time the application was submitted.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="endTime" type="xs:dateTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The time the application finished. If the application hasn't finished
this will return null.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="user" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The user who submitted the application.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="pool" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The pool the application was submitted to.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="progress" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The progress, as a percentage, the application has made. This is only
set if the application is currently executing.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="attributes" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[A map of additional application attributes which is generated by
Cloudera Manager. For example MR2 job counters are exposed as key/value
pairs here. For more details see the Cloudera Manager documentation.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="key" minOccurs="1" type="xs:string"/>
                  <xs:element name="value" minOccurs="1" type="xs:string"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="mr2AppInformation" type="apiMr2AppInformation" minOccurs="0"/>
      <xs:element name="state" type="xs:string" minOccurs="0"/>
      <xs:element name="containerUsedMemorySeconds" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Actual memory (in MB-secs) used by containers launched by the YARN application.
Computed by running a MapReduce job from Cloudera Service Monitor to
aggregate YARN usage metrics.
Available since v12.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="containerUsedMemoryMax" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Maximum memory used by containers launched by the YARN application.
Computed by running a MapReduce job from Cloudera Service Monitor to
aggregate YARN usage metrics
Available since v16]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="containerUsedCpuSeconds" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Actual CPU (in percent-secs) used by containers launched by the YARN application.
Computed by running a MapReduce job from Cloudera Service Monitor to
aggregate YARN usage metrics.
Available since v12.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="containerUsedVcoreSeconds" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Actual VCore-secs used by containers launched by the YARN application.
Computed by running a MapReduce job from Cloudera Service Monitor to
aggregate YARN usage metrics.
Available since v12.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="containerAllocatedMemorySeconds" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Total memory (in mb-secs) allocated to containers launched by the YARN application.
Computed by running a MapReduce job from Cloudera Service Monitor to
aggregate YARN usage metrics.
Available since v12.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="containerAllocatedVcoreSeconds" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Total vcore-secs allocated to containers launched by the YARN application.
Computed by running a MapReduce job from Cloudera Service Monitor to
aggregate YARN usage metrics.
Available since v12.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiYarnApplicationAttribute">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Metadata about a YARN application attribute.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The name of the attribute. This name can be used in filters, for example
'user' could be used in the filter 'user = root'.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="type" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The type of the attribute. Valid types are STRING, NUMBER, BOOLEAN, BYTES,
MILLISECONDS, BYTES_PER_SECOND, BYTE_SECONDS.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="displayName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The display name for the attribute.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="supportsHistograms" type="xs:boolean" minOccurs="1">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Whether the Service Monitor can generate a histogram of the distribution
of the attribute across applications.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The description of the attribute.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiYarnApplicationAttributeList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[The list of all attributes that are applicable to YARN applications.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="attributes" type="apiYarnApplicationAttribute" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiYarnApplicationDiagnosticsCollectionArgs">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Arguments used for collecting diagnostics data for Yarn applications]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="applicationIds" type="xs:string" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Id's of the applications whose diagnostics data has to be collected]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ticketNumber" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Ticket Number of the Cloudera Support Ticket]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="comments" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Comments to add to the support bundle]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiYarnApplicationResponse">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[The response contains a list of applications and warnings.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="applications" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The list of applications for this response.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="applications" type="apiYarnApplication" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[The list of applications for this response.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="warnings" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[This list of warnings for this response.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="warnings" type="xs:string" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[This list of warnings for this response.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiYarnKillResponse">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[The response from an Yarn kill application response.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="warning" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The warning, if any, from the call. We will return a warning if the caller
attempts to cancel an application that has already completed.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiYarnTenantUtilization">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Utilization report information of a tenant of Yarn application.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="tenantName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Name of the tenant.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgYarnCpuAllocation" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average number of VCores allocated to YARN applications of the tenant.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgYarnCpuUtilization" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average number of VCores used by YARN applications of the tenant.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgYarnCpuUnusedCapacity" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average unused VCores of the tenant.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgYarnCpuSteadyFairShare" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average steady fair share VCores.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgYarnPoolAllocatedCpuDuringContention" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average allocated Vcores with pending containers.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgYarnPoolFairShareCpuDuringContention" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average fair share VCores with pending containers.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgYarnPoolSteadyFairShareCpuDuringContention" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average steady fair share VCores with pending containers.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgYarnContainerWaitRatio" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average percentage of pending containers for the pool during periods of
contention.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgYarnMemoryAllocation" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average memory allocated to YARN applications of the tenant.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgYarnMemoryUtilization" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average memory used by YARN applications of the tenant.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgYarnMemoryUnusedCapacity" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average unused memory of the tenant.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgYarnMemorySteadyFairShare" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average steady fair share memory.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgYarnPoolAllocatedMemoryDuringContention" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average allocated memory with pending containers.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgYarnPoolFairShareMemoryDuringContention" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average fair share memory with pending containers.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgYarnPoolSteadyFairShareMemoryDuringContention" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average steady fair share memory with pending containers.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="apiYarnTenantUtilizationList">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[A list of yarn tenant utilization reports.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="apiListBase">
        <xs:sequence>
          <xs:element name="items" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="yarnTenantUtilizations" type="apiYarnTenantUtilization" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="apiYarnUtilization">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[Utilization report information of a Yarn application service.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="avgCpuUtilization" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average number of VCores used by YARN applications during the report
window.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maxCpuUtilization" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Maximum number of VCores used by YARN applications during the report
window.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgCpuDailyPeak" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average daily peak VCores used by YARN applications during the report
window. The number is computed by first finding the maximum resource
consumption per day and then taking their mean.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maxCpuUtilizationTimestampMs" type="xs:long" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Timestamp corresponds to maximum number of VCores used by YARN applications
during the report window.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgCpuUtilizationPercentage" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average percentage of VCores used by YARN applications during the report
window.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maxCpuUtilizationPercentage" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Maximum percentage of VCores used by YARN applications during the report
window.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgCpuDailyPeakPercentage" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average daily peak percentage of VCores used by YARN applications during
the report window.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgMemoryUtilization" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average memory used by YARN applications during the report window.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maxMemoryUtilization" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Maximum memory used by YARN applications during the report window.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgMemoryDailyPeak" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average daily peak memory used by YARN applications during the report
window. The number is computed by first finding the maximum resource
consumption per day and then taking their mean.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maxMemoryUtilizationTimestampMs" type="xs:long" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Timestamp corresponds to maximum memory used by YARN applications during
the report window.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgMemoryUtilizationPercentage" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average percentage memory used by YARN applications during the report window.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maxMemoryUtilizationPercentage" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Maximum percentage of memory used by YARN applications during the report window.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="avgMemoryDailyPeakPercentage" type="xs:double" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Average daily peak percentage of memory used by YARN applications during the report
window.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="tenantUtilizations" type="apiYarnTenantUtilizationList" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[A list of tenant utilization reports.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="errorMessage" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[error message of utilization report.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>
